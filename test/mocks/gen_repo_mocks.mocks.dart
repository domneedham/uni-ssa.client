// Mocks generated by Mockito 5.0.12 from annotations
// in ssa_app/test/mocks/gen_repo_mocks.dart.
// Do not manually edit this file.

import 'dart:async' as _i17;

import 'package:get/get.dart' as _i15;
import 'package:mockito/mockito.dart' as _i1;
import 'package:ssa_app/app/data/models/skill/category.dart' as _i12;
import 'package:ssa_app/app/data/models/skill/manager_staff_skill.dart' as _i10;
import 'package:ssa_app/app/data/models/skill/skill.dart' as _i14;
import 'package:ssa_app/app/data/models/skill/staff_skill.dart' as _i8;
import 'package:ssa_app/app/data/models/user/manager.dart' as _i5;
import 'package:ssa_app/app/data/models/user/staff.dart' as _i4;
import 'package:ssa_app/app/data/models/user/user.dart' as _i6;
import 'package:ssa_app/app/data/providers/category_provider.dart' as _i11;
import 'package:ssa_app/app/data/providers/manager_provider.dart' as _i3;
import 'package:ssa_app/app/data/providers/manager_staff_skill_provider.dart'
    as _i9;
import 'package:ssa_app/app/data/providers/skill_provider.dart' as _i13;
import 'package:ssa_app/app/data/providers/staff_provider.dart' as _i2;
import 'package:ssa_app/app/data/providers/staff_skill_provider.dart' as _i7;
import 'package:ssa_app/app/data/repository/category_repository.dart' as _i20;
import 'package:ssa_app/app/data/repository/manager_staff_skill_repository.dart'
    as _i19;
import 'package:ssa_app/app/data/repository/skill_repository.dart' as _i21;
import 'package:ssa_app/app/data/repository/staff_skill_repository.dart'
    as _i18;
import 'package:ssa_app/app/data/repository/user_repository.dart' as _i16;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeIStaffProvider extends _i1.Fake implements _i2.IStaffProvider {}

class _FakeIManagerProvider extends _i1.Fake implements _i3.IManagerProvider {}

class _FakeStaff extends _i1.Fake implements _i4.Staff {}

class _FakeManager extends _i1.Fake implements _i5.Manager {}

class _FakeUser extends _i1.Fake implements _i6.User {}

class _FakeIStaffSkillProvider extends _i1.Fake
    implements _i7.IStaffSkillProvider {}

class _FakeStaffSkill extends _i1.Fake implements _i8.StaffSkill {}

class _FakeIManagerStaffSkillProvider extends _i1.Fake
    implements _i9.IManagerStaffSkillProvider {}

class _FakeManagerStaffSkill extends _i1.Fake
    implements _i10.ManagerStaffSkill {}

class _FakeICategoryProvider extends _i1.Fake
    implements _i11.ICategoryProvider {}

class _FakeCategory extends _i1.Fake implements _i12.Category {}

class _FakeISkillProvider extends _i1.Fake implements _i13.ISkillProvider {}

class _FakeSkill extends _i1.Fake implements _i14.Skill {}

class _FakeDuration extends _i1.Fake implements Duration {}

class _FakeGetHttpClient extends _i1.Fake implements _i15.GetHttpClient {}

class _FakeInternalFinalCallback<T> extends _i1.Fake
    implements _i15.InternalFinalCallback<T> {}

class _FakeResponse<T> extends _i1.Fake implements _i15.Response<T> {}

class _FakeGetSocket extends _i1.Fake implements _i15.GetSocket {}

class _FakeGraphQLResponse<T> extends _i1.Fake
    implements _i15.GraphQLResponse<T> {}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i16.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IStaffProvider get staffProvider =>
      (super.noSuchMethod(Invocation.getter(#staffProvider),
          returnValue: _FakeIStaffProvider()) as _i2.IStaffProvider);
  @override
  _i3.IManagerProvider get managerProvider =>
      (super.noSuchMethod(Invocation.getter(#managerProvider),
          returnValue: _FakeIManagerProvider()) as _i3.IManagerProvider);
  @override
  _i4.Staff get staff =>
      (super.noSuchMethod(Invocation.getter(#staff), returnValue: _FakeStaff())
          as _i4.Staff);
  @override
  _i5.Manager get manager => (super.noSuchMethod(Invocation.getter(#manager),
      returnValue: _FakeManager()) as _i5.Manager);
  @override
  _i6.User get user =>
      (super.noSuchMethod(Invocation.getter(#user), returnValue: _FakeUser())
          as _i6.User);
  @override
  _i17.Future<_i4.Staff> getStaffById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getStaffById, [id]),
              returnValue: Future<_i4.Staff>.value(_FakeStaff()))
          as _i17.Future<_i4.Staff>);
  @override
  _i17.Future<_i5.Manager> getManagerById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getManagerById, [id]),
              returnValue: Future<_i5.Manager>.value(_FakeManager()))
          as _i17.Future<_i5.Manager>);
  @override
  _i17.Future<List<_i4.Staff>> searchStaffByName(String? searchText) =>
      (super.noSuchMethod(Invocation.method(#searchStaffByName, [searchText]),
              returnValue: Future<List<_i4.Staff>>.value(<_i4.Staff>[]))
          as _i17.Future<List<_i4.Staff>>);
  @override
  _i17.Future<List<_i5.Manager>> searchManagerByName(String? searchText) =>
      (super.noSuchMethod(Invocation.method(#searchManagerByName, [searchText]),
              returnValue: Future<List<_i5.Manager>>.value(<_i5.Manager>[]))
          as _i17.Future<List<_i5.Manager>>);
  @override
  _i17.Future<_i4.Staff> updateStaffDetails(_i4.Staff? s) =>
      (super.noSuchMethod(Invocation.method(#updateStaffDetails, [s]),
              returnValue: Future<_i4.Staff>.value(_FakeStaff()))
          as _i17.Future<_i4.Staff>);
}

/// A class which mocks [StaffSkillRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockStaffSkillRepository extends _i1.Mock
    implements _i18.StaffSkillRepository {
  MockStaffSkillRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.IStaffSkillProvider get staffSkillProvider =>
      (super.noSuchMethod(Invocation.getter(#staffSkillProvider),
          returnValue: _FakeIStaffSkillProvider()) as _i7.IStaffSkillProvider);
  @override
  _i17.Future<List<_i8.StaffSkill>> get skills => (super.noSuchMethod(
          Invocation.getter(#skills),
          returnValue: Future<List<_i8.StaffSkill>>.value(<_i8.StaffSkill>[]))
      as _i17.Future<List<_i8.StaffSkill>>);
  @override
  _i17.Future<_i8.StaffSkill> getSkillById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getSkillById, [id]),
              returnValue: Future<_i8.StaffSkill>.value(_FakeStaffSkill()))
          as _i17.Future<_i8.StaffSkill>);
  @override
  _i17.Future<List<_i8.StaffSkill>> getSkillsForUser(int? id) =>
      (super.noSuchMethod(Invocation.method(#getSkillsForUser, [id]),
              returnValue:
                  Future<List<_i8.StaffSkill>>.value(<_i8.StaffSkill>[]))
          as _i17.Future<List<_i8.StaffSkill>>);
  @override
  _i17.Future<_i8.StaffSkill> saveEdited(_i8.StaffSkill? skill) =>
      (super.noSuchMethod(Invocation.method(#saveEdited, [skill]),
              returnValue: Future<_i8.StaffSkill>.value(_FakeStaffSkill()))
          as _i17.Future<_i8.StaffSkill>);
  @override
  _i17.Future<_i8.StaffSkill> saveNew(_i8.StaffSkill? skill) =>
      (super.noSuchMethod(Invocation.method(#saveNew, [skill]),
              returnValue: Future<_i8.StaffSkill>.value(_FakeStaffSkill()))
          as _i17.Future<_i8.StaffSkill>);
}

/// A class which mocks [ManagerStaffSkillRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockManagerStaffSkillRepository extends _i1.Mock
    implements _i19.ManagerStaffSkillRepository {
  MockManagerStaffSkillRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.IManagerStaffSkillProvider get managerStaffSkillProvider =>
      (super.noSuchMethod(Invocation.getter(#managerStaffSkillProvider),
              returnValue: _FakeIManagerStaffSkillProvider())
          as _i9.IManagerStaffSkillProvider);
  @override
  _i17.Future<List<_i10.ManagerStaffSkill>> get skills =>
      (super.noSuchMethod(Invocation.getter(#skills),
              returnValue: Future<List<_i10.ManagerStaffSkill>>.value(
                  <_i10.ManagerStaffSkill>[]))
          as _i17.Future<List<_i10.ManagerStaffSkill>>);
  @override
  _i17.Future<_i10.ManagerStaffSkill> getManagerStaffSkillById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getManagerStaffSkillById, [id]),
              returnValue: Future<_i10.ManagerStaffSkill>.value(
                  _FakeManagerStaffSkill()))
          as _i17.Future<_i10.ManagerStaffSkill>);
}

/// A class which mocks [CategoryRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryRepository extends _i1.Mock
    implements _i20.CategoryRepository {
  MockCategoryRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.ICategoryProvider get categoryProvider =>
      (super.noSuchMethod(Invocation.getter(#categoryProvider),
          returnValue: _FakeICategoryProvider()) as _i11.ICategoryProvider);
  @override
  _i17.Future<List<_i12.Category>> get categories =>
      (super.noSuchMethod(Invocation.getter(#categories),
              returnValue: Future<List<_i12.Category>>.value(<_i12.Category>[]))
          as _i17.Future<List<_i12.Category>>);
  @override
  _i17.Future<_i12.Category> getCategoryById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getCategoryById, [id]),
              returnValue: Future<_i12.Category>.value(_FakeCategory()))
          as _i17.Future<_i12.Category>);
  @override
  _i17.Future<_i12.Category> createCategory(_i12.Category? category) =>
      (super.noSuchMethod(Invocation.method(#createCategory, [category]),
              returnValue: Future<_i12.Category>.value(_FakeCategory()))
          as _i17.Future<_i12.Category>);
  @override
  _i17.Future<_i12.Category> updateCategory(_i12.Category? category) =>
      (super.noSuchMethod(Invocation.method(#updateCategory, [category]),
              returnValue: Future<_i12.Category>.value(_FakeCategory()))
          as _i17.Future<_i12.Category>);
}

/// A class which mocks [SkillRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSkillRepository extends _i1.Mock implements _i21.SkillRepository {
  MockSkillRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.ISkillProvider get skillProvider =>
      (super.noSuchMethod(Invocation.getter(#skillProvider),
          returnValue: _FakeISkillProvider()) as _i13.ISkillProvider);
  @override
  _i17.Future<List<_i14.Skill>> searchByName(String? name) =>
      (super.noSuchMethod(Invocation.method(#searchByName, [name]),
              returnValue: Future<List<_i14.Skill>>.value(<_i14.Skill>[]))
          as _i17.Future<List<_i14.Skill>>);
  @override
  _i17.Future<_i14.Skill> findById(int? id) =>
      (super.noSuchMethod(Invocation.method(#findById, [id]),
              returnValue: Future<_i14.Skill>.value(_FakeSkill()))
          as _i17.Future<_i14.Skill>);
}

/// A class which mocks [CategoryProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryProvider extends _i1.Mock implements _i11.CategoryProvider {
  MockCategoryProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get allowAutoSignedCert =>
      (super.noSuchMethod(Invocation.getter(#allowAutoSignedCert),
          returnValue: false) as bool);
  @override
  set allowAutoSignedCert(bool? _allowAutoSignedCert) => super.noSuchMethod(
      Invocation.setter(#allowAutoSignedCert, _allowAutoSignedCert),
      returnValueForMissingStub: null);
  @override
  String get userAgent =>
      (super.noSuchMethod(Invocation.getter(#userAgent), returnValue: '')
          as String);
  @override
  set userAgent(String? _userAgent) =>
      super.noSuchMethod(Invocation.setter(#userAgent, _userAgent),
          returnValueForMissingStub: null);
  @override
  bool get sendUserAgent =>
      (super.noSuchMethod(Invocation.getter(#sendUserAgent), returnValue: false)
          as bool);
  @override
  set sendUserAgent(bool? _sendUserAgent) =>
      super.noSuchMethod(Invocation.setter(#sendUserAgent, _sendUserAgent),
          returnValueForMissingStub: null);
  @override
  set baseUrl(String? _baseUrl) =>
      super.noSuchMethod(Invocation.setter(#baseUrl, _baseUrl),
          returnValueForMissingStub: null);
  @override
  String get defaultContentType => (super
          .noSuchMethod(Invocation.getter(#defaultContentType), returnValue: '')
      as String);
  @override
  set defaultContentType(String? _defaultContentType) => super.noSuchMethod(
      Invocation.setter(#defaultContentType, _defaultContentType),
      returnValueForMissingStub: null);
  @override
  bool get followRedirects => (super
          .noSuchMethod(Invocation.getter(#followRedirects), returnValue: false)
      as bool);
  @override
  set followRedirects(bool? _followRedirects) =>
      super.noSuchMethod(Invocation.setter(#followRedirects, _followRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxRedirects =>
      (super.noSuchMethod(Invocation.getter(#maxRedirects), returnValue: 0)
          as int);
  @override
  set maxRedirects(int? _maxRedirects) =>
      super.noSuchMethod(Invocation.setter(#maxRedirects, _maxRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxAuthRetries =>
      (super.noSuchMethod(Invocation.getter(#maxAuthRetries), returnValue: 0)
          as int);
  @override
  set maxAuthRetries(int? _maxAuthRetries) =>
      super.noSuchMethod(Invocation.setter(#maxAuthRetries, _maxAuthRetries),
          returnValueForMissingStub: null);
  @override
  set defaultDecoder(_i15.Decoder<dynamic>? _defaultDecoder) =>
      super.noSuchMethod(Invocation.setter(#defaultDecoder, _defaultDecoder),
          returnValueForMissingStub: null);
  @override
  Duration get timeout => (super.noSuchMethod(Invocation.getter(#timeout),
      returnValue: _FakeDuration()) as Duration);
  @override
  set timeout(Duration? _timeout) =>
      super.noSuchMethod(Invocation.setter(#timeout, _timeout),
          returnValueForMissingStub: null);
  @override
  set trustedCertificates(
          List<_i15.TrustedCertificate>? _trustedCertificates) =>
      super.noSuchMethod(
          Invocation.setter(#trustedCertificates, _trustedCertificates),
          returnValueForMissingStub: null);
  @override
  bool get withCredentials => (super
          .noSuchMethod(Invocation.getter(#withCredentials), returnValue: false)
      as bool);
  @override
  set withCredentials(bool? _withCredentials) =>
      super.noSuchMethod(Invocation.setter(#withCredentials, _withCredentials),
          returnValueForMissingStub: null);
  @override
  List<_i15.GetSocket> get sockets =>
      (super.noSuchMethod(Invocation.getter(#sockets),
          returnValue: <_i15.GetSocket>[]) as List<_i15.GetSocket>);
  @override
  _i15.GetHttpClient get httpClient =>
      (super.noSuchMethod(Invocation.getter(#httpClient),
          returnValue: _FakeGetHttpClient()) as _i15.GetHttpClient);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set sockets(List<_i15.GetSocket>? _sockets) =>
      super.noSuchMethod(Invocation.setter(#sockets, _sockets),
          returnValueForMissingStub: null);
  @override
  bool get initialized =>
      (super.noSuchMethod(Invocation.getter(#initialized), returnValue: false)
          as bool);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  _i15.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(Invocation.getter(#onStart),
              returnValue: _FakeInternalFinalCallback<void>())
          as _i15.InternalFinalCallback<void>);
  @override
  _i15.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(Invocation.getter(#onDelete),
              returnValue: _FakeInternalFinalCallback<void>())
          as _i15.InternalFinalCallback<void>);
  @override
  void onInit() => super.noSuchMethod(Invocation.method(#onInit, []),
      returnValueForMissingStub: null);
  @override
  _i17.Future<_i15.Response<List<_i12.Category>>> getAllCategories() =>
      (super.noSuchMethod(Invocation.method(#getAllCategories, []),
              returnValue: Future<_i15.Response<List<_i12.Category>>>.value(
                  _FakeResponse<List<_i12.Category>>()))
          as _i17.Future<_i15.Response<List<_i12.Category>>>);
  @override
  _i17.Future<_i15.Response<_i12.Category>> getCategoryById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getCategoryById, [id]),
              returnValue: Future<_i15.Response<_i12.Category>>.value(
                  _FakeResponse<_i12.Category>()))
          as _i17.Future<_i15.Response<_i12.Category>>);
  @override
  _i17.Future<_i12.Category> createCategory(_i12.Category? category) =>
      (super.noSuchMethod(Invocation.method(#createCategory, [category]),
              returnValue: Future<_i12.Category>.value(_FakeCategory()))
          as _i17.Future<_i12.Category>);
  @override
  _i17.Future<_i12.Category> updateCategory(_i12.Category? category) =>
      (super.noSuchMethod(Invocation.method(#updateCategory, [category]),
              returnValue: Future<_i12.Category>.value(_FakeCategory()))
          as _i17.Future<_i12.Category>);
  @override
  _i17.Future<_i15.Response<T>> get<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#get, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> post<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> put<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> patch<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> request<T>(String? url, String? method,
          {dynamic body,
          String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#request, [
                url,
                method
              ], {
                #body: body,
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> delete<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i15.GetSocket socket(String? url,
          {Duration? ping = const Duration(seconds: 5)}) =>
      (super.noSuchMethod(Invocation.method(#socket, [url], {#ping: ping}),
          returnValue: _FakeGetSocket()) as _i15.GetSocket);
  @override
  _i17.Future<_i15.GraphQLResponse<T>> query<T>(String? query,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#query, [query],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i15.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse<T>()))
          as _i17.Future<_i15.GraphQLResponse<T>>);
  @override
  _i17.Future<_i15.GraphQLResponse<T>> mutation<T>(String? mutation,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#mutation, [mutation],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i15.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse<T>()))
          as _i17.Future<_i15.GraphQLResponse<T>>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void onReady() => super.noSuchMethod(Invocation.method(#onReady, []),
      returnValueForMissingStub: null);
  @override
  void onClose() => super.noSuchMethod(Invocation.method(#onClose, []),
      returnValueForMissingStub: null);
  @override
  void $configureLifeCycle() =>
      super.noSuchMethod(Invocation.method(#$configureLifeCycle, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [ManagerProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockManagerProvider extends _i1.Mock implements _i3.ManagerProvider {
  MockManagerProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get allowAutoSignedCert =>
      (super.noSuchMethod(Invocation.getter(#allowAutoSignedCert),
          returnValue: false) as bool);
  @override
  set allowAutoSignedCert(bool? _allowAutoSignedCert) => super.noSuchMethod(
      Invocation.setter(#allowAutoSignedCert, _allowAutoSignedCert),
      returnValueForMissingStub: null);
  @override
  String get userAgent =>
      (super.noSuchMethod(Invocation.getter(#userAgent), returnValue: '')
          as String);
  @override
  set userAgent(String? _userAgent) =>
      super.noSuchMethod(Invocation.setter(#userAgent, _userAgent),
          returnValueForMissingStub: null);
  @override
  bool get sendUserAgent =>
      (super.noSuchMethod(Invocation.getter(#sendUserAgent), returnValue: false)
          as bool);
  @override
  set sendUserAgent(bool? _sendUserAgent) =>
      super.noSuchMethod(Invocation.setter(#sendUserAgent, _sendUserAgent),
          returnValueForMissingStub: null);
  @override
  set baseUrl(String? _baseUrl) =>
      super.noSuchMethod(Invocation.setter(#baseUrl, _baseUrl),
          returnValueForMissingStub: null);
  @override
  String get defaultContentType => (super
          .noSuchMethod(Invocation.getter(#defaultContentType), returnValue: '')
      as String);
  @override
  set defaultContentType(String? _defaultContentType) => super.noSuchMethod(
      Invocation.setter(#defaultContentType, _defaultContentType),
      returnValueForMissingStub: null);
  @override
  bool get followRedirects => (super
          .noSuchMethod(Invocation.getter(#followRedirects), returnValue: false)
      as bool);
  @override
  set followRedirects(bool? _followRedirects) =>
      super.noSuchMethod(Invocation.setter(#followRedirects, _followRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxRedirects =>
      (super.noSuchMethod(Invocation.getter(#maxRedirects), returnValue: 0)
          as int);
  @override
  set maxRedirects(int? _maxRedirects) =>
      super.noSuchMethod(Invocation.setter(#maxRedirects, _maxRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxAuthRetries =>
      (super.noSuchMethod(Invocation.getter(#maxAuthRetries), returnValue: 0)
          as int);
  @override
  set maxAuthRetries(int? _maxAuthRetries) =>
      super.noSuchMethod(Invocation.setter(#maxAuthRetries, _maxAuthRetries),
          returnValueForMissingStub: null);
  @override
  set defaultDecoder(_i15.Decoder<dynamic>? _defaultDecoder) =>
      super.noSuchMethod(Invocation.setter(#defaultDecoder, _defaultDecoder),
          returnValueForMissingStub: null);
  @override
  Duration get timeout => (super.noSuchMethod(Invocation.getter(#timeout),
      returnValue: _FakeDuration()) as Duration);
  @override
  set timeout(Duration? _timeout) =>
      super.noSuchMethod(Invocation.setter(#timeout, _timeout),
          returnValueForMissingStub: null);
  @override
  set trustedCertificates(
          List<_i15.TrustedCertificate>? _trustedCertificates) =>
      super.noSuchMethod(
          Invocation.setter(#trustedCertificates, _trustedCertificates),
          returnValueForMissingStub: null);
  @override
  bool get withCredentials => (super
          .noSuchMethod(Invocation.getter(#withCredentials), returnValue: false)
      as bool);
  @override
  set withCredentials(bool? _withCredentials) =>
      super.noSuchMethod(Invocation.setter(#withCredentials, _withCredentials),
          returnValueForMissingStub: null);
  @override
  List<_i15.GetSocket> get sockets =>
      (super.noSuchMethod(Invocation.getter(#sockets),
          returnValue: <_i15.GetSocket>[]) as List<_i15.GetSocket>);
  @override
  _i15.GetHttpClient get httpClient =>
      (super.noSuchMethod(Invocation.getter(#httpClient),
          returnValue: _FakeGetHttpClient()) as _i15.GetHttpClient);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set sockets(List<_i15.GetSocket>? _sockets) =>
      super.noSuchMethod(Invocation.setter(#sockets, _sockets),
          returnValueForMissingStub: null);
  @override
  bool get initialized =>
      (super.noSuchMethod(Invocation.getter(#initialized), returnValue: false)
          as bool);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  _i15.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(Invocation.getter(#onStart),
              returnValue: _FakeInternalFinalCallback<void>())
          as _i15.InternalFinalCallback<void>);
  @override
  _i15.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(Invocation.getter(#onDelete),
              returnValue: _FakeInternalFinalCallback<void>())
          as _i15.InternalFinalCallback<void>);
  @override
  void onInit() => super.noSuchMethod(Invocation.method(#onInit, []),
      returnValueForMissingStub: null);
  @override
  _i17.Future<_i15.Response<_i5.Manager>> getManagerById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getManagerById, [id]),
              returnValue: Future<_i15.Response<_i5.Manager>>.value(
                  _FakeResponse<_i5.Manager>()))
          as _i17.Future<_i15.Response<_i5.Manager>>);
  @override
  _i17.Future<_i15.Response<List<_i5.Manager>>> searchManagerByName(
          String? name) =>
      (super.noSuchMethod(Invocation.method(#searchManagerByName, [name]),
              returnValue: Future<_i15.Response<List<_i5.Manager>>>.value(
                  _FakeResponse<List<_i5.Manager>>()))
          as _i17.Future<_i15.Response<List<_i5.Manager>>>);
  @override
  _i17.Future<_i15.Response<T>> get<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#get, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> post<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> put<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> patch<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> request<T>(String? url, String? method,
          {dynamic body,
          String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#request, [
                url,
                method
              ], {
                #body: body,
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> delete<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i15.GetSocket socket(String? url,
          {Duration? ping = const Duration(seconds: 5)}) =>
      (super.noSuchMethod(Invocation.method(#socket, [url], {#ping: ping}),
          returnValue: _FakeGetSocket()) as _i15.GetSocket);
  @override
  _i17.Future<_i15.GraphQLResponse<T>> query<T>(String? query,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#query, [query],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i15.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse<T>()))
          as _i17.Future<_i15.GraphQLResponse<T>>);
  @override
  _i17.Future<_i15.GraphQLResponse<T>> mutation<T>(String? mutation,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#mutation, [mutation],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i15.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse<T>()))
          as _i17.Future<_i15.GraphQLResponse<T>>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void onReady() => super.noSuchMethod(Invocation.method(#onReady, []),
      returnValueForMissingStub: null);
  @override
  void onClose() => super.noSuchMethod(Invocation.method(#onClose, []),
      returnValueForMissingStub: null);
  @override
  void $configureLifeCycle() =>
      super.noSuchMethod(Invocation.method(#$configureLifeCycle, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [ManagerStaffSkillProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockManagerStaffSkillProvider extends _i1.Mock
    implements _i9.ManagerStaffSkillProvider {
  MockManagerStaffSkillProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get allowAutoSignedCert =>
      (super.noSuchMethod(Invocation.getter(#allowAutoSignedCert),
          returnValue: false) as bool);
  @override
  set allowAutoSignedCert(bool? _allowAutoSignedCert) => super.noSuchMethod(
      Invocation.setter(#allowAutoSignedCert, _allowAutoSignedCert),
      returnValueForMissingStub: null);
  @override
  String get userAgent =>
      (super.noSuchMethod(Invocation.getter(#userAgent), returnValue: '')
          as String);
  @override
  set userAgent(String? _userAgent) =>
      super.noSuchMethod(Invocation.setter(#userAgent, _userAgent),
          returnValueForMissingStub: null);
  @override
  bool get sendUserAgent =>
      (super.noSuchMethod(Invocation.getter(#sendUserAgent), returnValue: false)
          as bool);
  @override
  set sendUserAgent(bool? _sendUserAgent) =>
      super.noSuchMethod(Invocation.setter(#sendUserAgent, _sendUserAgent),
          returnValueForMissingStub: null);
  @override
  set baseUrl(String? _baseUrl) =>
      super.noSuchMethod(Invocation.setter(#baseUrl, _baseUrl),
          returnValueForMissingStub: null);
  @override
  String get defaultContentType => (super
          .noSuchMethod(Invocation.getter(#defaultContentType), returnValue: '')
      as String);
  @override
  set defaultContentType(String? _defaultContentType) => super.noSuchMethod(
      Invocation.setter(#defaultContentType, _defaultContentType),
      returnValueForMissingStub: null);
  @override
  bool get followRedirects => (super
          .noSuchMethod(Invocation.getter(#followRedirects), returnValue: false)
      as bool);
  @override
  set followRedirects(bool? _followRedirects) =>
      super.noSuchMethod(Invocation.setter(#followRedirects, _followRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxRedirects =>
      (super.noSuchMethod(Invocation.getter(#maxRedirects), returnValue: 0)
          as int);
  @override
  set maxRedirects(int? _maxRedirects) =>
      super.noSuchMethod(Invocation.setter(#maxRedirects, _maxRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxAuthRetries =>
      (super.noSuchMethod(Invocation.getter(#maxAuthRetries), returnValue: 0)
          as int);
  @override
  set maxAuthRetries(int? _maxAuthRetries) =>
      super.noSuchMethod(Invocation.setter(#maxAuthRetries, _maxAuthRetries),
          returnValueForMissingStub: null);
  @override
  set defaultDecoder(_i15.Decoder<dynamic>? _defaultDecoder) =>
      super.noSuchMethod(Invocation.setter(#defaultDecoder, _defaultDecoder),
          returnValueForMissingStub: null);
  @override
  Duration get timeout => (super.noSuchMethod(Invocation.getter(#timeout),
      returnValue: _FakeDuration()) as Duration);
  @override
  set timeout(Duration? _timeout) =>
      super.noSuchMethod(Invocation.setter(#timeout, _timeout),
          returnValueForMissingStub: null);
  @override
  set trustedCertificates(
          List<_i15.TrustedCertificate>? _trustedCertificates) =>
      super.noSuchMethod(
          Invocation.setter(#trustedCertificates, _trustedCertificates),
          returnValueForMissingStub: null);
  @override
  bool get withCredentials => (super
          .noSuchMethod(Invocation.getter(#withCredentials), returnValue: false)
      as bool);
  @override
  set withCredentials(bool? _withCredentials) =>
      super.noSuchMethod(Invocation.setter(#withCredentials, _withCredentials),
          returnValueForMissingStub: null);
  @override
  List<_i15.GetSocket> get sockets =>
      (super.noSuchMethod(Invocation.getter(#sockets),
          returnValue: <_i15.GetSocket>[]) as List<_i15.GetSocket>);
  @override
  _i15.GetHttpClient get httpClient =>
      (super.noSuchMethod(Invocation.getter(#httpClient),
          returnValue: _FakeGetHttpClient()) as _i15.GetHttpClient);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set sockets(List<_i15.GetSocket>? _sockets) =>
      super.noSuchMethod(Invocation.setter(#sockets, _sockets),
          returnValueForMissingStub: null);
  @override
  bool get initialized =>
      (super.noSuchMethod(Invocation.getter(#initialized), returnValue: false)
          as bool);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  _i15.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(Invocation.getter(#onStart),
              returnValue: _FakeInternalFinalCallback<void>())
          as _i15.InternalFinalCallback<void>);
  @override
  _i15.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(Invocation.getter(#onDelete),
              returnValue: _FakeInternalFinalCallback<void>())
          as _i15.InternalFinalCallback<void>);
  @override
  void onInit() => super.noSuchMethod(Invocation.method(#onInit, []),
      returnValueForMissingStub: null);
  @override
  _i17.Future<_i15.Response<List<_i10.ManagerStaffSkill>>> getAll() =>
      (super.noSuchMethod(Invocation.method(#getAll, []),
              returnValue:
                  Future<_i15.Response<List<_i10.ManagerStaffSkill>>>.value(
                      _FakeResponse<List<_i10.ManagerStaffSkill>>()))
          as _i17.Future<_i15.Response<List<_i10.ManagerStaffSkill>>>);
  @override
  _i17.Future<_i15.Response<_i10.ManagerStaffSkill>> getById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getById, [id]),
              returnValue: Future<_i15.Response<_i10.ManagerStaffSkill>>.value(
                  _FakeResponse<_i10.ManagerStaffSkill>()))
          as _i17.Future<_i15.Response<_i10.ManagerStaffSkill>>);
  @override
  _i17.Future<_i15.Response<T>> get<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#get, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> post<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> put<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> patch<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> request<T>(String? url, String? method,
          {dynamic body,
          String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#request, [
                url,
                method
              ], {
                #body: body,
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> delete<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i15.GetSocket socket(String? url,
          {Duration? ping = const Duration(seconds: 5)}) =>
      (super.noSuchMethod(Invocation.method(#socket, [url], {#ping: ping}),
          returnValue: _FakeGetSocket()) as _i15.GetSocket);
  @override
  _i17.Future<_i15.GraphQLResponse<T>> query<T>(String? query,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#query, [query],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i15.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse<T>()))
          as _i17.Future<_i15.GraphQLResponse<T>>);
  @override
  _i17.Future<_i15.GraphQLResponse<T>> mutation<T>(String? mutation,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#mutation, [mutation],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i15.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse<T>()))
          as _i17.Future<_i15.GraphQLResponse<T>>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void onReady() => super.noSuchMethod(Invocation.method(#onReady, []),
      returnValueForMissingStub: null);
  @override
  void onClose() => super.noSuchMethod(Invocation.method(#onClose, []),
      returnValueForMissingStub: null);
  @override
  void $configureLifeCycle() =>
      super.noSuchMethod(Invocation.method(#$configureLifeCycle, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [SkillProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockSkillProvider extends _i1.Mock implements _i13.SkillProvider {
  MockSkillProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get allowAutoSignedCert =>
      (super.noSuchMethod(Invocation.getter(#allowAutoSignedCert),
          returnValue: false) as bool);
  @override
  set allowAutoSignedCert(bool? _allowAutoSignedCert) => super.noSuchMethod(
      Invocation.setter(#allowAutoSignedCert, _allowAutoSignedCert),
      returnValueForMissingStub: null);
  @override
  String get userAgent =>
      (super.noSuchMethod(Invocation.getter(#userAgent), returnValue: '')
          as String);
  @override
  set userAgent(String? _userAgent) =>
      super.noSuchMethod(Invocation.setter(#userAgent, _userAgent),
          returnValueForMissingStub: null);
  @override
  bool get sendUserAgent =>
      (super.noSuchMethod(Invocation.getter(#sendUserAgent), returnValue: false)
          as bool);
  @override
  set sendUserAgent(bool? _sendUserAgent) =>
      super.noSuchMethod(Invocation.setter(#sendUserAgent, _sendUserAgent),
          returnValueForMissingStub: null);
  @override
  set baseUrl(String? _baseUrl) =>
      super.noSuchMethod(Invocation.setter(#baseUrl, _baseUrl),
          returnValueForMissingStub: null);
  @override
  String get defaultContentType => (super
          .noSuchMethod(Invocation.getter(#defaultContentType), returnValue: '')
      as String);
  @override
  set defaultContentType(String? _defaultContentType) => super.noSuchMethod(
      Invocation.setter(#defaultContentType, _defaultContentType),
      returnValueForMissingStub: null);
  @override
  bool get followRedirects => (super
          .noSuchMethod(Invocation.getter(#followRedirects), returnValue: false)
      as bool);
  @override
  set followRedirects(bool? _followRedirects) =>
      super.noSuchMethod(Invocation.setter(#followRedirects, _followRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxRedirects =>
      (super.noSuchMethod(Invocation.getter(#maxRedirects), returnValue: 0)
          as int);
  @override
  set maxRedirects(int? _maxRedirects) =>
      super.noSuchMethod(Invocation.setter(#maxRedirects, _maxRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxAuthRetries =>
      (super.noSuchMethod(Invocation.getter(#maxAuthRetries), returnValue: 0)
          as int);
  @override
  set maxAuthRetries(int? _maxAuthRetries) =>
      super.noSuchMethod(Invocation.setter(#maxAuthRetries, _maxAuthRetries),
          returnValueForMissingStub: null);
  @override
  set defaultDecoder(_i15.Decoder<dynamic>? _defaultDecoder) =>
      super.noSuchMethod(Invocation.setter(#defaultDecoder, _defaultDecoder),
          returnValueForMissingStub: null);
  @override
  Duration get timeout => (super.noSuchMethod(Invocation.getter(#timeout),
      returnValue: _FakeDuration()) as Duration);
  @override
  set timeout(Duration? _timeout) =>
      super.noSuchMethod(Invocation.setter(#timeout, _timeout),
          returnValueForMissingStub: null);
  @override
  set trustedCertificates(
          List<_i15.TrustedCertificate>? _trustedCertificates) =>
      super.noSuchMethod(
          Invocation.setter(#trustedCertificates, _trustedCertificates),
          returnValueForMissingStub: null);
  @override
  bool get withCredentials => (super
          .noSuchMethod(Invocation.getter(#withCredentials), returnValue: false)
      as bool);
  @override
  set withCredentials(bool? _withCredentials) =>
      super.noSuchMethod(Invocation.setter(#withCredentials, _withCredentials),
          returnValueForMissingStub: null);
  @override
  List<_i15.GetSocket> get sockets =>
      (super.noSuchMethod(Invocation.getter(#sockets),
          returnValue: <_i15.GetSocket>[]) as List<_i15.GetSocket>);
  @override
  _i15.GetHttpClient get httpClient =>
      (super.noSuchMethod(Invocation.getter(#httpClient),
          returnValue: _FakeGetHttpClient()) as _i15.GetHttpClient);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set sockets(List<_i15.GetSocket>? _sockets) =>
      super.noSuchMethod(Invocation.setter(#sockets, _sockets),
          returnValueForMissingStub: null);
  @override
  bool get initialized =>
      (super.noSuchMethod(Invocation.getter(#initialized), returnValue: false)
          as bool);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  _i15.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(Invocation.getter(#onStart),
              returnValue: _FakeInternalFinalCallback<void>())
          as _i15.InternalFinalCallback<void>);
  @override
  _i15.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(Invocation.getter(#onDelete),
              returnValue: _FakeInternalFinalCallback<void>())
          as _i15.InternalFinalCallback<void>);
  @override
  void onInit() => super.noSuchMethod(Invocation.method(#onInit, []),
      returnValueForMissingStub: null);
  @override
  _i17.Future<_i15.Response<List<_i14.Skill>>> getAll() =>
      (super.noSuchMethod(Invocation.method(#getAll, []),
              returnValue: Future<_i15.Response<List<_i14.Skill>>>.value(
                  _FakeResponse<List<_i14.Skill>>()))
          as _i17.Future<_i15.Response<List<_i14.Skill>>>);
  @override
  _i17.Future<_i14.Skill> getById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getById, [id]),
              returnValue: Future<_i14.Skill>.value(_FakeSkill()))
          as _i17.Future<_i14.Skill>);
  @override
  _i17.Future<_i15.Response<List<_i14.Skill>>> searchByName(String? name) =>
      (super.noSuchMethod(Invocation.method(#searchByName, [name]),
              returnValue: Future<_i15.Response<List<_i14.Skill>>>.value(
                  _FakeResponse<List<_i14.Skill>>()))
          as _i17.Future<_i15.Response<List<_i14.Skill>>>);
  @override
  _i17.Future<_i15.Response<T>> get<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#get, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> post<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> put<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> patch<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> request<T>(String? url, String? method,
          {dynamic body,
          String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#request, [
                url,
                method
              ], {
                #body: body,
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> delete<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i15.GetSocket socket(String? url,
          {Duration? ping = const Duration(seconds: 5)}) =>
      (super.noSuchMethod(Invocation.method(#socket, [url], {#ping: ping}),
          returnValue: _FakeGetSocket()) as _i15.GetSocket);
  @override
  _i17.Future<_i15.GraphQLResponse<T>> query<T>(String? query,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#query, [query],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i15.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse<T>()))
          as _i17.Future<_i15.GraphQLResponse<T>>);
  @override
  _i17.Future<_i15.GraphQLResponse<T>> mutation<T>(String? mutation,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#mutation, [mutation],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i15.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse<T>()))
          as _i17.Future<_i15.GraphQLResponse<T>>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void onReady() => super.noSuchMethod(Invocation.method(#onReady, []),
      returnValueForMissingStub: null);
  @override
  void onClose() => super.noSuchMethod(Invocation.method(#onClose, []),
      returnValueForMissingStub: null);
  @override
  void $configureLifeCycle() =>
      super.noSuchMethod(Invocation.method(#$configureLifeCycle, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [StaffProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockStaffProvider extends _i1.Mock implements _i2.StaffProvider {
  MockStaffProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get allowAutoSignedCert =>
      (super.noSuchMethod(Invocation.getter(#allowAutoSignedCert),
          returnValue: false) as bool);
  @override
  set allowAutoSignedCert(bool? _allowAutoSignedCert) => super.noSuchMethod(
      Invocation.setter(#allowAutoSignedCert, _allowAutoSignedCert),
      returnValueForMissingStub: null);
  @override
  String get userAgent =>
      (super.noSuchMethod(Invocation.getter(#userAgent), returnValue: '')
          as String);
  @override
  set userAgent(String? _userAgent) =>
      super.noSuchMethod(Invocation.setter(#userAgent, _userAgent),
          returnValueForMissingStub: null);
  @override
  bool get sendUserAgent =>
      (super.noSuchMethod(Invocation.getter(#sendUserAgent), returnValue: false)
          as bool);
  @override
  set sendUserAgent(bool? _sendUserAgent) =>
      super.noSuchMethod(Invocation.setter(#sendUserAgent, _sendUserAgent),
          returnValueForMissingStub: null);
  @override
  set baseUrl(String? _baseUrl) =>
      super.noSuchMethod(Invocation.setter(#baseUrl, _baseUrl),
          returnValueForMissingStub: null);
  @override
  String get defaultContentType => (super
          .noSuchMethod(Invocation.getter(#defaultContentType), returnValue: '')
      as String);
  @override
  set defaultContentType(String? _defaultContentType) => super.noSuchMethod(
      Invocation.setter(#defaultContentType, _defaultContentType),
      returnValueForMissingStub: null);
  @override
  bool get followRedirects => (super
          .noSuchMethod(Invocation.getter(#followRedirects), returnValue: false)
      as bool);
  @override
  set followRedirects(bool? _followRedirects) =>
      super.noSuchMethod(Invocation.setter(#followRedirects, _followRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxRedirects =>
      (super.noSuchMethod(Invocation.getter(#maxRedirects), returnValue: 0)
          as int);
  @override
  set maxRedirects(int? _maxRedirects) =>
      super.noSuchMethod(Invocation.setter(#maxRedirects, _maxRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxAuthRetries =>
      (super.noSuchMethod(Invocation.getter(#maxAuthRetries), returnValue: 0)
          as int);
  @override
  set maxAuthRetries(int? _maxAuthRetries) =>
      super.noSuchMethod(Invocation.setter(#maxAuthRetries, _maxAuthRetries),
          returnValueForMissingStub: null);
  @override
  set defaultDecoder(_i15.Decoder<dynamic>? _defaultDecoder) =>
      super.noSuchMethod(Invocation.setter(#defaultDecoder, _defaultDecoder),
          returnValueForMissingStub: null);
  @override
  Duration get timeout => (super.noSuchMethod(Invocation.getter(#timeout),
      returnValue: _FakeDuration()) as Duration);
  @override
  set timeout(Duration? _timeout) =>
      super.noSuchMethod(Invocation.setter(#timeout, _timeout),
          returnValueForMissingStub: null);
  @override
  set trustedCertificates(
          List<_i15.TrustedCertificate>? _trustedCertificates) =>
      super.noSuchMethod(
          Invocation.setter(#trustedCertificates, _trustedCertificates),
          returnValueForMissingStub: null);
  @override
  bool get withCredentials => (super
          .noSuchMethod(Invocation.getter(#withCredentials), returnValue: false)
      as bool);
  @override
  set withCredentials(bool? _withCredentials) =>
      super.noSuchMethod(Invocation.setter(#withCredentials, _withCredentials),
          returnValueForMissingStub: null);
  @override
  List<_i15.GetSocket> get sockets =>
      (super.noSuchMethod(Invocation.getter(#sockets),
          returnValue: <_i15.GetSocket>[]) as List<_i15.GetSocket>);
  @override
  _i15.GetHttpClient get httpClient =>
      (super.noSuchMethod(Invocation.getter(#httpClient),
          returnValue: _FakeGetHttpClient()) as _i15.GetHttpClient);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set sockets(List<_i15.GetSocket>? _sockets) =>
      super.noSuchMethod(Invocation.setter(#sockets, _sockets),
          returnValueForMissingStub: null);
  @override
  bool get initialized =>
      (super.noSuchMethod(Invocation.getter(#initialized), returnValue: false)
          as bool);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  _i15.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(Invocation.getter(#onStart),
              returnValue: _FakeInternalFinalCallback<void>())
          as _i15.InternalFinalCallback<void>);
  @override
  _i15.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(Invocation.getter(#onDelete),
              returnValue: _FakeInternalFinalCallback<void>())
          as _i15.InternalFinalCallback<void>);
  @override
  void onInit() => super.noSuchMethod(Invocation.method(#onInit, []),
      returnValueForMissingStub: null);
  @override
  _i17.Future<_i15.Response<_i4.Staff>> getStaffById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getStaffById, [id]),
              returnValue: Future<_i15.Response<_i4.Staff>>.value(
                  _FakeResponse<_i4.Staff>()))
          as _i17.Future<_i15.Response<_i4.Staff>>);
  @override
  _i17.Future<_i15.Response<List<_i4.Staff>>> searchStaffByName(String? name) =>
      (super.noSuchMethod(Invocation.method(#searchStaffByName, [name]),
              returnValue: Future<_i15.Response<List<_i4.Staff>>>.value(
                  _FakeResponse<List<_i4.Staff>>()))
          as _i17.Future<_i15.Response<List<_i4.Staff>>>);
  @override
  _i17.Future<_i4.Staff> updateDetails(_i4.Staff? staff) =>
      (super.noSuchMethod(Invocation.method(#updateDetails, [staff]),
              returnValue: Future<_i4.Staff>.value(_FakeStaff()))
          as _i17.Future<_i4.Staff>);
  @override
  _i17.Future<_i15.Response<T>> get<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#get, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> post<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> put<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> patch<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> request<T>(String? url, String? method,
          {dynamic body,
          String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#request, [
                url,
                method
              ], {
                #body: body,
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> delete<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i15.GetSocket socket(String? url,
          {Duration? ping = const Duration(seconds: 5)}) =>
      (super.noSuchMethod(Invocation.method(#socket, [url], {#ping: ping}),
          returnValue: _FakeGetSocket()) as _i15.GetSocket);
  @override
  _i17.Future<_i15.GraphQLResponse<T>> query<T>(String? query,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#query, [query],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i15.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse<T>()))
          as _i17.Future<_i15.GraphQLResponse<T>>);
  @override
  _i17.Future<_i15.GraphQLResponse<T>> mutation<T>(String? mutation,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#mutation, [mutation],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i15.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse<T>()))
          as _i17.Future<_i15.GraphQLResponse<T>>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void onReady() => super.noSuchMethod(Invocation.method(#onReady, []),
      returnValueForMissingStub: null);
  @override
  void onClose() => super.noSuchMethod(Invocation.method(#onClose, []),
      returnValueForMissingStub: null);
  @override
  void $configureLifeCycle() =>
      super.noSuchMethod(Invocation.method(#$configureLifeCycle, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [StaffSkillProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockStaffSkillProvider extends _i1.Mock
    implements _i7.StaffSkillProvider {
  MockStaffSkillProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get allowAutoSignedCert =>
      (super.noSuchMethod(Invocation.getter(#allowAutoSignedCert),
          returnValue: false) as bool);
  @override
  set allowAutoSignedCert(bool? _allowAutoSignedCert) => super.noSuchMethod(
      Invocation.setter(#allowAutoSignedCert, _allowAutoSignedCert),
      returnValueForMissingStub: null);
  @override
  String get userAgent =>
      (super.noSuchMethod(Invocation.getter(#userAgent), returnValue: '')
          as String);
  @override
  set userAgent(String? _userAgent) =>
      super.noSuchMethod(Invocation.setter(#userAgent, _userAgent),
          returnValueForMissingStub: null);
  @override
  bool get sendUserAgent =>
      (super.noSuchMethod(Invocation.getter(#sendUserAgent), returnValue: false)
          as bool);
  @override
  set sendUserAgent(bool? _sendUserAgent) =>
      super.noSuchMethod(Invocation.setter(#sendUserAgent, _sendUserAgent),
          returnValueForMissingStub: null);
  @override
  set baseUrl(String? _baseUrl) =>
      super.noSuchMethod(Invocation.setter(#baseUrl, _baseUrl),
          returnValueForMissingStub: null);
  @override
  String get defaultContentType => (super
          .noSuchMethod(Invocation.getter(#defaultContentType), returnValue: '')
      as String);
  @override
  set defaultContentType(String? _defaultContentType) => super.noSuchMethod(
      Invocation.setter(#defaultContentType, _defaultContentType),
      returnValueForMissingStub: null);
  @override
  bool get followRedirects => (super
          .noSuchMethod(Invocation.getter(#followRedirects), returnValue: false)
      as bool);
  @override
  set followRedirects(bool? _followRedirects) =>
      super.noSuchMethod(Invocation.setter(#followRedirects, _followRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxRedirects =>
      (super.noSuchMethod(Invocation.getter(#maxRedirects), returnValue: 0)
          as int);
  @override
  set maxRedirects(int? _maxRedirects) =>
      super.noSuchMethod(Invocation.setter(#maxRedirects, _maxRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxAuthRetries =>
      (super.noSuchMethod(Invocation.getter(#maxAuthRetries), returnValue: 0)
          as int);
  @override
  set maxAuthRetries(int? _maxAuthRetries) =>
      super.noSuchMethod(Invocation.setter(#maxAuthRetries, _maxAuthRetries),
          returnValueForMissingStub: null);
  @override
  set defaultDecoder(_i15.Decoder<dynamic>? _defaultDecoder) =>
      super.noSuchMethod(Invocation.setter(#defaultDecoder, _defaultDecoder),
          returnValueForMissingStub: null);
  @override
  Duration get timeout => (super.noSuchMethod(Invocation.getter(#timeout),
      returnValue: _FakeDuration()) as Duration);
  @override
  set timeout(Duration? _timeout) =>
      super.noSuchMethod(Invocation.setter(#timeout, _timeout),
          returnValueForMissingStub: null);
  @override
  set trustedCertificates(
          List<_i15.TrustedCertificate>? _trustedCertificates) =>
      super.noSuchMethod(
          Invocation.setter(#trustedCertificates, _trustedCertificates),
          returnValueForMissingStub: null);
  @override
  bool get withCredentials => (super
          .noSuchMethod(Invocation.getter(#withCredentials), returnValue: false)
      as bool);
  @override
  set withCredentials(bool? _withCredentials) =>
      super.noSuchMethod(Invocation.setter(#withCredentials, _withCredentials),
          returnValueForMissingStub: null);
  @override
  List<_i15.GetSocket> get sockets =>
      (super.noSuchMethod(Invocation.getter(#sockets),
          returnValue: <_i15.GetSocket>[]) as List<_i15.GetSocket>);
  @override
  _i15.GetHttpClient get httpClient =>
      (super.noSuchMethod(Invocation.getter(#httpClient),
          returnValue: _FakeGetHttpClient()) as _i15.GetHttpClient);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set sockets(List<_i15.GetSocket>? _sockets) =>
      super.noSuchMethod(Invocation.setter(#sockets, _sockets),
          returnValueForMissingStub: null);
  @override
  bool get initialized =>
      (super.noSuchMethod(Invocation.getter(#initialized), returnValue: false)
          as bool);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  _i15.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(Invocation.getter(#onStart),
              returnValue: _FakeInternalFinalCallback<void>())
          as _i15.InternalFinalCallback<void>);
  @override
  _i15.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(Invocation.getter(#onDelete),
              returnValue: _FakeInternalFinalCallback<void>())
          as _i15.InternalFinalCallback<void>);
  @override
  void onInit() => super.noSuchMethod(Invocation.method(#onInit, []),
      returnValueForMissingStub: null);
  @override
  _i17.Future<_i15.Response<List<_i8.StaffSkill>>> getAll() =>
      (super.noSuchMethod(Invocation.method(#getAll, []),
              returnValue: Future<_i15.Response<List<_i8.StaffSkill>>>.value(
                  _FakeResponse<List<_i8.StaffSkill>>()))
          as _i17.Future<_i15.Response<List<_i8.StaffSkill>>>);
  @override
  _i17.Future<_i15.Response<_i8.StaffSkill>> getById(int? id, int? sid) =>
      (super.noSuchMethod(Invocation.method(#getById, [id, sid]),
              returnValue: Future<_i15.Response<_i8.StaffSkill>>.value(
                  _FakeResponse<_i8.StaffSkill>()))
          as _i17.Future<_i15.Response<_i8.StaffSkill>>);
  @override
  _i17.Future<_i15.Response<List<_i8.StaffSkill>>> getAllForUser(int? id) =>
      (super.noSuchMethod(Invocation.method(#getAllForUser, [id]),
              returnValue: Future<_i15.Response<List<_i8.StaffSkill>>>.value(
                  _FakeResponse<List<_i8.StaffSkill>>()))
          as _i17.Future<_i15.Response<List<_i8.StaffSkill>>>);
  @override
  _i17.Future<_i8.StaffSkill> getByIdDecoded(int? id, int? sid) =>
      (super.noSuchMethod(Invocation.method(#getByIdDecoded, [id, sid]),
              returnValue: Future<_i8.StaffSkill>.value(_FakeStaffSkill()))
          as _i17.Future<_i8.StaffSkill>);
  @override
  _i17.Future<_i8.StaffSkill> saveEdited(_i8.StaffSkill? skill, int? sid) =>
      (super.noSuchMethod(Invocation.method(#saveEdited, [skill, sid]),
              returnValue: Future<_i8.StaffSkill>.value(_FakeStaffSkill()))
          as _i17.Future<_i8.StaffSkill>);
  @override
  _i17.Future<_i8.StaffSkill> saveNew(_i8.StaffSkill? skill, int? sid) =>
      (super.noSuchMethod(Invocation.method(#saveNew, [skill, sid]),
              returnValue: Future<_i8.StaffSkill>.value(_FakeStaffSkill()))
          as _i17.Future<_i8.StaffSkill>);
  @override
  _i17.Future<_i15.Response<T>> get<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#get, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> post<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> put<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> patch<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> request<T>(String? url, String? method,
          {dynamic body,
          String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder,
          _i15.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#request, [
                url,
                method
              ], {
                #body: body,
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i17.Future<_i15.Response<T>> delete<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i15.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue: Future<_i15.Response<T>>.value(_FakeResponse<T>()))
          as _i17.Future<_i15.Response<T>>);
  @override
  _i15.GetSocket socket(String? url,
          {Duration? ping = const Duration(seconds: 5)}) =>
      (super.noSuchMethod(Invocation.method(#socket, [url], {#ping: ping}),
          returnValue: _FakeGetSocket()) as _i15.GetSocket);
  @override
  _i17.Future<_i15.GraphQLResponse<T>> query<T>(String? query,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#query, [query],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i15.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse<T>()))
          as _i17.Future<_i15.GraphQLResponse<T>>);
  @override
  _i17.Future<_i15.GraphQLResponse<T>> mutation<T>(String? mutation,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#mutation, [mutation],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i15.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse<T>()))
          as _i17.Future<_i15.GraphQLResponse<T>>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void onReady() => super.noSuchMethod(Invocation.method(#onReady, []),
      returnValueForMissingStub: null);
  @override
  void onClose() => super.noSuchMethod(Invocation.method(#onClose, []),
      returnValueForMissingStub: null);
  @override
  void $configureLifeCycle() =>
      super.noSuchMethod(Invocation.method(#$configureLifeCycle, []),
          returnValueForMissingStub: null);
}
