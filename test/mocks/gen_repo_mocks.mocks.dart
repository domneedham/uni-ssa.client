// Mocks generated by Mockito 5.0.15 from annotations
// in ssa_app/test/mocks/gen_repo_mocks.dart.
// Do not manually edit this file.

import 'dart:async' as _i24;

import 'package:get/get.dart' as _i18;
import 'package:get_storage/get_storage.dart' as _i17;
import 'package:mockito/mockito.dart' as _i1;
import 'package:ssa_app/app/data/models/skill/category.dart' as _i12;
import 'package:ssa_app/app/data/models/skill/manager_staff_skill.dart' as _i10;
import 'package:ssa_app/app/data/models/skill/skill.dart' as _i14;
import 'package:ssa_app/app/data/models/skill/staff_skill.dart' as _i8;
import 'package:ssa_app/app/data/models/user/manager.dart' as _i6;
import 'package:ssa_app/app/data/models/user/staff.dart' as _i5;
import 'package:ssa_app/app/data/models/user/user.dart' as _i19;
import 'package:ssa_app/app/data/providers/auth_provider.dart' as _i4;
import 'package:ssa_app/app/data/providers/category_provider.dart' as _i11;
import 'package:ssa_app/app/data/providers/manager_provider.dart' as _i3;
import 'package:ssa_app/app/data/providers/manager_staff_skill_provider.dart'
    as _i9;
import 'package:ssa_app/app/data/providers/skill_provider.dart' as _i13;
import 'package:ssa_app/app/data/providers/staff_provider.dart' as _i2;
import 'package:ssa_app/app/data/providers/staff_skill_provider.dart' as _i7;
import 'package:ssa_app/app/data/repository/category_repository.dart' as _i22;
import 'package:ssa_app/app/data/repository/manager_staff_skill_repository.dart'
    as _i21;
import 'package:ssa_app/app/data/repository/skill_repository.dart' as _i23;
import 'package:ssa_app/app/data/repository/staff_skill_repository.dart'
    as _i20;
import 'package:ssa_app/app/data/repository/user_repository.dart' as _i16;
import 'package:ssa_app/app/data/services/box_service.dart' as _i15;
import 'package:ssa_app/app/data/services/category_service.dart' as _i28;
import 'package:ssa_app/app/data/services/manager_staff_skill_service.dart'
    as _i27;
import 'package:ssa_app/app/data/services/skill_service.dart' as _i29;
import 'package:ssa_app/app/data/services/staff_skill_service.dart' as _i26;
import 'package:ssa_app/app/data/services/user_service.dart' as _i25;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeIStaffProvider_0 extends _i1.Fake implements _i2.IStaffProvider {}

class _FakeIManagerProvider_1 extends _i1.Fake implements _i3.IManagerProvider {
}

class _FakeIAuthProvider_2 extends _i1.Fake implements _i4.IAuthProvider {}

class _FakeStaff_3 extends _i1.Fake implements _i5.Staff {}

class _FakeManager_4 extends _i1.Fake implements _i6.Manager {}

class _FakeIStaffSkillProvider_5 extends _i1.Fake
    implements _i7.IStaffSkillProvider {}

class _FakeStaffSkill_6 extends _i1.Fake implements _i8.StaffSkill {}

class _FakeIManagerStaffSkillProvider_7 extends _i1.Fake
    implements _i9.IManagerStaffSkillProvider {}

class _FakeManagerStaffSkill_8 extends _i1.Fake
    implements _i10.ManagerStaffSkill {}

class _FakeICategoryProvider_9 extends _i1.Fake
    implements _i11.ICategoryProvider {}

class _FakeCategory_10 extends _i1.Fake implements _i12.Category {}

class _FakeISkillProvider_11 extends _i1.Fake implements _i13.ISkillProvider {}

class _FakeSkill_12 extends _i1.Fake implements _i14.Skill {}

class _FakeBoxService_13 extends _i1.Fake implements _i15.BoxService {}

class _FakeIUserRepository_14 extends _i1.Fake implements _i16.IUserRepository {
}

class _FakeGetStorage_15 extends _i1.Fake implements _i17.GetStorage {}

class _FakeRxBool_16 extends _i1.Fake implements _i18.RxBool {}

class _FakeUser_17 extends _i1.Fake implements _i19.User {}

class _FakeIStaffSkillRepository_18 extends _i1.Fake
    implements _i20.IStaffSkillRepository {}

class _FakeIManagerStaffSkillRepository_19 extends _i1.Fake
    implements _i21.IManagerStaffSkillRepository {}

class _FakeICategoryRepository_20 extends _i1.Fake
    implements _i22.ICategoryRepository {}

class _FakeISkillRepository_21 extends _i1.Fake
    implements _i23.ISkillRepository {}

class _FakeDuration_22 extends _i1.Fake implements Duration {}

class _FakeGetHttpClient_23 extends _i1.Fake implements _i18.GetHttpClient {}

class _FakeInternalFinalCallback_24<T> extends _i1.Fake
    implements _i18.InternalFinalCallback<T> {}

class _FakeResponse_25<T> extends _i1.Fake implements _i18.Response<T> {}

class _FakeGetSocket_26 extends _i1.Fake implements _i18.GetSocket {}

class _FakeGraphQLResponse_27<T> extends _i1.Fake
    implements _i18.GraphQLResponse<T> {}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i16.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IStaffProvider get staffProvider =>
      (super.noSuchMethod(Invocation.getter(#staffProvider),
          returnValue: _FakeIStaffProvider_0()) as _i2.IStaffProvider);
  @override
  _i3.IManagerProvider get managerProvider =>
      (super.noSuchMethod(Invocation.getter(#managerProvider),
          returnValue: _FakeIManagerProvider_1()) as _i3.IManagerProvider);
  @override
  _i4.IAuthProvider get authProvider =>
      (super.noSuchMethod(Invocation.getter(#authProvider),
          returnValue: _FakeIAuthProvider_2()) as _i4.IAuthProvider);
  @override
  _i24.Future<_i5.Staff> loginStaff(String? email) =>
      (super.noSuchMethod(Invocation.method(#loginStaff, [email]),
              returnValue: Future<_i5.Staff>.value(_FakeStaff_3()))
          as _i24.Future<_i5.Staff>);
  @override
  _i24.Future<_i6.Manager> loginManager(String? email) =>
      (super.noSuchMethod(Invocation.method(#loginManager, [email]),
              returnValue: Future<_i6.Manager>.value(_FakeManager_4()))
          as _i24.Future<_i6.Manager>);
  @override
  _i24.Future<Map<String, String>> loginEmailPassword(
          String? email, String? password) =>
      (super.noSuchMethod(
              Invocation.method(#loginEmailPassword, [email, password]),
              returnValue:
                  Future<Map<String, String>>.value(<String, String>{}))
          as _i24.Future<Map<String, String>>);
  @override
  _i24.Future<_i5.Staff> getStaffById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getStaffById, [id]),
              returnValue: Future<_i5.Staff>.value(_FakeStaff_3()))
          as _i24.Future<_i5.Staff>);
  @override
  _i24.Future<_i6.Manager> getManagerById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getManagerById, [id]),
              returnValue: Future<_i6.Manager>.value(_FakeManager_4()))
          as _i24.Future<_i6.Manager>);
  @override
  _i24.Future<List<_i5.Staff>> searchStaffByName(String? name) =>
      (super.noSuchMethod(Invocation.method(#searchStaffByName, [name]),
              returnValue: Future<List<_i5.Staff>>.value(<_i5.Staff>[]))
          as _i24.Future<List<_i5.Staff>>);
  @override
  _i24.Future<List<_i6.Manager>> searchManagerByName(String? name) =>
      (super.noSuchMethod(Invocation.method(#searchManagerByName, [name]),
              returnValue: Future<List<_i6.Manager>>.value(<_i6.Manager>[]))
          as _i24.Future<List<_i6.Manager>>);
  @override
  _i24.Future<_i5.Staff> updateStaffDetails(_i5.Staff? s) =>
      (super.noSuchMethod(Invocation.method(#updateStaffDetails, [s]),
              returnValue: Future<_i5.Staff>.value(_FakeStaff_3()))
          as _i24.Future<_i5.Staff>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [StaffSkillRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockStaffSkillRepository extends _i1.Mock
    implements _i20.StaffSkillRepository {
  MockStaffSkillRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.IStaffSkillProvider get staffSkillProvider => (super.noSuchMethod(
      Invocation.getter(#staffSkillProvider),
      returnValue: _FakeIStaffSkillProvider_5()) as _i7.IStaffSkillProvider);
  @override
  _i24.Future<_i8.StaffSkill> getById(int? id, int? userId) =>
      (super.noSuchMethod(Invocation.method(#getById, [id, userId]),
              returnValue: Future<_i8.StaffSkill>.value(_FakeStaffSkill_6()))
          as _i24.Future<_i8.StaffSkill>);
  @override
  _i24.Future<List<_i8.StaffSkill>> getAllByUserId(int? id) =>
      (super.noSuchMethod(Invocation.method(#getAllByUserId, [id]),
              returnValue:
                  Future<List<_i8.StaffSkill>>.value(<_i8.StaffSkill>[]))
          as _i24.Future<List<_i8.StaffSkill>>);
  @override
  _i24.Future<List<_i8.StaffSkill>> getAll() => (super.noSuchMethod(
          Invocation.method(#getAll, []),
          returnValue: Future<List<_i8.StaffSkill>>.value(<_i8.StaffSkill>[]))
      as _i24.Future<List<_i8.StaffSkill>>);
  @override
  _i24.Future<_i8.StaffSkill> create(_i8.StaffSkill? skill, int? userId) =>
      (super.noSuchMethod(Invocation.method(#create, [skill, userId]),
              returnValue: Future<_i8.StaffSkill>.value(_FakeStaffSkill_6()))
          as _i24.Future<_i8.StaffSkill>);
  @override
  _i24.Future<_i8.StaffSkill> update(_i8.StaffSkill? skill, int? userId) =>
      (super.noSuchMethod(Invocation.method(#update, [skill, userId]),
              returnValue: Future<_i8.StaffSkill>.value(_FakeStaffSkill_6()))
          as _i24.Future<_i8.StaffSkill>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [ManagerStaffSkillRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockManagerStaffSkillRepository extends _i1.Mock
    implements _i21.ManagerStaffSkillRepository {
  MockManagerStaffSkillRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.IManagerStaffSkillProvider get managerStaffSkillProvider =>
      (super.noSuchMethod(Invocation.getter(#managerStaffSkillProvider),
              returnValue: _FakeIManagerStaffSkillProvider_7())
          as _i9.IManagerStaffSkillProvider);
  @override
  _i24.Future<List<_i10.ManagerStaffSkill>> getAll() =>
      (super.noSuchMethod(Invocation.method(#getAll, []),
              returnValue: Future<List<_i10.ManagerStaffSkill>>.value(
                  <_i10.ManagerStaffSkill>[]))
          as _i24.Future<List<_i10.ManagerStaffSkill>>);
  @override
  _i24.Future<_i10.ManagerStaffSkill> getById(int? id) => (super.noSuchMethod(
          Invocation.method(#getById, [id]),
          returnValue:
              Future<_i10.ManagerStaffSkill>.value(_FakeManagerStaffSkill_8()))
      as _i24.Future<_i10.ManagerStaffSkill>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [CategoryRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryRepository extends _i1.Mock
    implements _i22.CategoryRepository {
  MockCategoryRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.ICategoryProvider get categoryProvider =>
      (super.noSuchMethod(Invocation.getter(#categoryProvider),
          returnValue: _FakeICategoryProvider_9()) as _i11.ICategoryProvider);
  @override
  _i24.Future<_i12.Category> getById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getById, [id]),
              returnValue: Future<_i12.Category>.value(_FakeCategory_10()))
          as _i24.Future<_i12.Category>);
  @override
  _i24.Future<List<_i12.Category>> getAll() =>
      (super.noSuchMethod(Invocation.method(#getAll, []),
              returnValue: Future<List<_i12.Category>>.value(<_i12.Category>[]))
          as _i24.Future<List<_i12.Category>>);
  @override
  _i24.Future<_i12.Category> create(_i12.Category? category) =>
      (super.noSuchMethod(Invocation.method(#create, [category]),
              returnValue: Future<_i12.Category>.value(_FakeCategory_10()))
          as _i24.Future<_i12.Category>);
  @override
  _i24.Future<_i12.Category> update(_i12.Category? category) =>
      (super.noSuchMethod(Invocation.method(#update, [category]),
              returnValue: Future<_i12.Category>.value(_FakeCategory_10()))
          as _i24.Future<_i12.Category>);
  @override
  _i24.Future<void> delete(int? id) => (super.noSuchMethod(
      Invocation.method(#delete, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i24.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [SkillRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSkillRepository extends _i1.Mock implements _i23.SkillRepository {
  MockSkillRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.ISkillProvider get skillProvider =>
      (super.noSuchMethod(Invocation.getter(#skillProvider),
          returnValue: _FakeISkillProvider_11()) as _i13.ISkillProvider);
  @override
  _i24.Future<List<_i14.Skill>> searchByName(String? name) =>
      (super.noSuchMethod(Invocation.method(#searchByName, [name]),
              returnValue: Future<List<_i14.Skill>>.value(<_i14.Skill>[]))
          as _i24.Future<List<_i14.Skill>>);
  @override
  _i24.Future<_i14.Skill> getById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getById, [id]),
              returnValue: Future<_i14.Skill>.value(_FakeSkill_12()))
          as _i24.Future<_i14.Skill>);
  @override
  _i24.Future<_i14.Skill> create(_i14.Skill? skill) =>
      (super.noSuchMethod(Invocation.method(#create, [skill]),
              returnValue: Future<_i14.Skill>.value(_FakeSkill_12()))
          as _i24.Future<_i14.Skill>);
  @override
  _i24.Future<_i14.Skill> update(_i14.Skill? skill) =>
      (super.noSuchMethod(Invocation.method(#update, [skill]),
              returnValue: Future<_i14.Skill>.value(_FakeSkill_12()))
          as _i24.Future<_i14.Skill>);
  @override
  _i24.Future<void> delete(int? id) => (super.noSuchMethod(
      Invocation.method(#delete, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i24.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i25.UserService {
  MockUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.BoxService get boxService =>
      (super.noSuchMethod(Invocation.getter(#boxService),
          returnValue: _FakeBoxService_13()) as _i15.BoxService);
  @override
  _i16.IUserRepository get userRepository =>
      (super.noSuchMethod(Invocation.getter(#userRepository),
          returnValue: _FakeIUserRepository_14()) as _i16.IUserRepository);
  @override
  _i17.GetStorage get box => (super.noSuchMethod(Invocation.getter(#box),
      returnValue: _FakeGetStorage_15()) as _i17.GetStorage);
  @override
  _i18.RxBool get firstLaunch =>
      (super.noSuchMethod(Invocation.getter(#firstLaunch),
          returnValue: _FakeRxBool_16()) as _i18.RxBool);
  @override
  _i18.RxBool get loggedIn => (super.noSuchMethod(Invocation.getter(#loggedIn),
      returnValue: _FakeRxBool_16()) as _i18.RxBool);
  @override
  _i24.Future<_i19.User> loginEmailPassword(String? email, String? password) =>
      (super.noSuchMethod(
              Invocation.method(#loginEmailPassword, [email, password]),
              returnValue: Future<_i19.User>.value(_FakeUser_17()))
          as _i24.Future<_i19.User>);
  @override
  _i24.Future<_i19.User?> initLogin() =>
      (super.noSuchMethod(Invocation.method(#initLogin, []),
          returnValue: Future<_i19.User?>.value()) as _i24.Future<_i19.User?>);
  @override
  void logout() => super.noSuchMethod(Invocation.method(#logout, []),
      returnValueForMissingStub: null);
  @override
  _i24.Future<_i5.Staff> getStaffById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getStaffById, [id]),
              returnValue: Future<_i5.Staff>.value(_FakeStaff_3()))
          as _i24.Future<_i5.Staff>);
  @override
  _i24.Future<_i6.Manager> getManagerById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getManagerById, [id]),
              returnValue: Future<_i6.Manager>.value(_FakeManager_4()))
          as _i24.Future<_i6.Manager>);
  @override
  _i24.Future<List<_i5.Staff>> searchStaffByName(String? name) =>
      (super.noSuchMethod(Invocation.method(#searchStaffByName, [name]),
              returnValue: Future<List<_i5.Staff>>.value(<_i5.Staff>[]))
          as _i24.Future<List<_i5.Staff>>);
  @override
  _i24.Future<List<_i6.Manager>> searchManagerByName(String? name) =>
      (super.noSuchMethod(Invocation.method(#searchManagerByName, [name]),
              returnValue: Future<List<_i6.Manager>>.value(<_i6.Manager>[]))
          as _i24.Future<List<_i6.Manager>>);
  @override
  _i24.Future<_i5.Staff> updateStaffDetails(_i5.Staff? s) =>
      (super.noSuchMethod(Invocation.method(#updateStaffDetails, [s]),
              returnValue: Future<_i5.Staff>.value(_FakeStaff_3()))
          as _i24.Future<_i5.Staff>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [StaffSkillService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStaffSkillService extends _i1.Mock implements _i26.StaffSkillService {
  MockStaffSkillService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i20.IStaffSkillRepository get staffSkillRepository =>
      (super.noSuchMethod(Invocation.getter(#staffSkillRepository),
              returnValue: _FakeIStaffSkillRepository_18())
          as _i20.IStaffSkillRepository);
  @override
  _i24.Future<_i8.StaffSkill> getById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getById, [id]),
              returnValue: Future<_i8.StaffSkill>.value(_FakeStaffSkill_6()))
          as _i24.Future<_i8.StaffSkill>);
  @override
  _i24.Future<List<_i8.StaffSkill>> getAllByUserId(int? id) =>
      (super.noSuchMethod(Invocation.method(#getAllByUserId, [id]),
              returnValue:
                  Future<List<_i8.StaffSkill>>.value(<_i8.StaffSkill>[]))
          as _i24.Future<List<_i8.StaffSkill>>);
  @override
  _i24.Future<List<_i8.StaffSkill>> getAll() => (super.noSuchMethod(
          Invocation.method(#getAll, []),
          returnValue: Future<List<_i8.StaffSkill>>.value(<_i8.StaffSkill>[]))
      as _i24.Future<List<_i8.StaffSkill>>);
  @override
  _i24.Future<_i8.StaffSkill> create(_i8.StaffSkill? skill) =>
      (super.noSuchMethod(Invocation.method(#create, [skill]),
              returnValue: Future<_i8.StaffSkill>.value(_FakeStaffSkill_6()))
          as _i24.Future<_i8.StaffSkill>);
  @override
  _i24.Future<_i8.StaffSkill> update(_i8.StaffSkill? skill) =>
      (super.noSuchMethod(Invocation.method(#update, [skill]),
              returnValue: Future<_i8.StaffSkill>.value(_FakeStaffSkill_6()))
          as _i24.Future<_i8.StaffSkill>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [ManagerStaffSkillService].
///
/// See the documentation for Mockito's code generation for more information.
class MockManagerStaffSkillService extends _i1.Mock
    implements _i27.ManagerStaffSkillService {
  MockManagerStaffSkillService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i21.IManagerStaffSkillRepository get managerStaffSkillRepository =>
      (super.noSuchMethod(Invocation.getter(#managerStaffSkillRepository),
              returnValue: _FakeIManagerStaffSkillRepository_19())
          as _i21.IManagerStaffSkillRepository);
  @override
  _i24.Future<_i10.ManagerStaffSkill> getById(int? id) => (super.noSuchMethod(
          Invocation.method(#getById, [id]),
          returnValue:
              Future<_i10.ManagerStaffSkill>.value(_FakeManagerStaffSkill_8()))
      as _i24.Future<_i10.ManagerStaffSkill>);
  @override
  _i24.Future<List<_i10.ManagerStaffSkill>> getAll() =>
      (super.noSuchMethod(Invocation.method(#getAll, []),
              returnValue: Future<List<_i10.ManagerStaffSkill>>.value(
                  <_i10.ManagerStaffSkill>[]))
          as _i24.Future<List<_i10.ManagerStaffSkill>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [CategoryService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryService extends _i1.Mock implements _i28.CategoryService {
  MockCategoryService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.ICategoryRepository get categoryRepository => (super.noSuchMethod(
      Invocation.getter(#categoryRepository),
      returnValue: _FakeICategoryRepository_20()) as _i22.ICategoryRepository);
  @override
  _i24.Future<_i12.Category> getById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getById, [id]),
              returnValue: Future<_i12.Category>.value(_FakeCategory_10()))
          as _i24.Future<_i12.Category>);
  @override
  _i24.Future<List<_i12.Category>> getAll() =>
      (super.noSuchMethod(Invocation.method(#getAll, []),
              returnValue: Future<List<_i12.Category>>.value(<_i12.Category>[]))
          as _i24.Future<List<_i12.Category>>);
  @override
  _i24.Future<_i12.Category> create(_i12.Category? category) =>
      (super.noSuchMethod(Invocation.method(#create, [category]),
              returnValue: Future<_i12.Category>.value(_FakeCategory_10()))
          as _i24.Future<_i12.Category>);
  @override
  _i24.Future<_i12.Category> update(_i12.Category? category) =>
      (super.noSuchMethod(Invocation.method(#update, [category]),
              returnValue: Future<_i12.Category>.value(_FakeCategory_10()))
          as _i24.Future<_i12.Category>);
  @override
  _i24.Future<void> delete(int? id) => (super.noSuchMethod(
      Invocation.method(#delete, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i24.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [SkillService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSkillService extends _i1.Mock implements _i29.SkillService {
  MockSkillService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i23.ISkillRepository get skillRepository =>
      (super.noSuchMethod(Invocation.getter(#skillRepository),
          returnValue: _FakeISkillRepository_21()) as _i23.ISkillRepository);
  @override
  _i24.Future<List<_i14.Skill>> searchByName(String? name) =>
      (super.noSuchMethod(Invocation.method(#searchByName, [name]),
              returnValue: Future<List<_i14.Skill>>.value(<_i14.Skill>[]))
          as _i24.Future<List<_i14.Skill>>);
  @override
  _i24.Future<_i14.Skill> getById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getById, [id]),
              returnValue: Future<_i14.Skill>.value(_FakeSkill_12()))
          as _i24.Future<_i14.Skill>);
  @override
  _i24.Future<_i14.Skill> create(_i14.Skill? skill) =>
      (super.noSuchMethod(Invocation.method(#create, [skill]),
              returnValue: Future<_i14.Skill>.value(_FakeSkill_12()))
          as _i24.Future<_i14.Skill>);
  @override
  _i24.Future<_i14.Skill> update(_i14.Skill? skill) =>
      (super.noSuchMethod(Invocation.method(#update, [skill]),
              returnValue: Future<_i14.Skill>.value(_FakeSkill_12()))
          as _i24.Future<_i14.Skill>);
  @override
  _i24.Future<void> delete(int? id) => (super.noSuchMethod(
      Invocation.method(#delete, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i24.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [CategoryProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryProvider extends _i1.Mock implements _i11.CategoryProvider {
  MockCategoryProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get allowAutoSignedCert =>
      (super.noSuchMethod(Invocation.getter(#allowAutoSignedCert),
          returnValue: false) as bool);
  @override
  set allowAutoSignedCert(bool? _allowAutoSignedCert) => super.noSuchMethod(
      Invocation.setter(#allowAutoSignedCert, _allowAutoSignedCert),
      returnValueForMissingStub: null);
  @override
  String get userAgent =>
      (super.noSuchMethod(Invocation.getter(#userAgent), returnValue: '')
          as String);
  @override
  set userAgent(String? _userAgent) =>
      super.noSuchMethod(Invocation.setter(#userAgent, _userAgent),
          returnValueForMissingStub: null);
  @override
  bool get sendUserAgent =>
      (super.noSuchMethod(Invocation.getter(#sendUserAgent), returnValue: false)
          as bool);
  @override
  set sendUserAgent(bool? _sendUserAgent) =>
      super.noSuchMethod(Invocation.setter(#sendUserAgent, _sendUserAgent),
          returnValueForMissingStub: null);
  @override
  set baseUrl(String? _baseUrl) =>
      super.noSuchMethod(Invocation.setter(#baseUrl, _baseUrl),
          returnValueForMissingStub: null);
  @override
  String get defaultContentType => (super
          .noSuchMethod(Invocation.getter(#defaultContentType), returnValue: '')
      as String);
  @override
  set defaultContentType(String? _defaultContentType) => super.noSuchMethod(
      Invocation.setter(#defaultContentType, _defaultContentType),
      returnValueForMissingStub: null);
  @override
  bool get followRedirects => (super
          .noSuchMethod(Invocation.getter(#followRedirects), returnValue: false)
      as bool);
  @override
  set followRedirects(bool? _followRedirects) =>
      super.noSuchMethod(Invocation.setter(#followRedirects, _followRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxRedirects =>
      (super.noSuchMethod(Invocation.getter(#maxRedirects), returnValue: 0)
          as int);
  @override
  set maxRedirects(int? _maxRedirects) =>
      super.noSuchMethod(Invocation.setter(#maxRedirects, _maxRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxAuthRetries =>
      (super.noSuchMethod(Invocation.getter(#maxAuthRetries), returnValue: 0)
          as int);
  @override
  set maxAuthRetries(int? _maxAuthRetries) =>
      super.noSuchMethod(Invocation.setter(#maxAuthRetries, _maxAuthRetries),
          returnValueForMissingStub: null);
  @override
  set defaultDecoder(_i18.Decoder<dynamic>? _defaultDecoder) =>
      super.noSuchMethod(Invocation.setter(#defaultDecoder, _defaultDecoder),
          returnValueForMissingStub: null);
  @override
  Duration get timeout => (super.noSuchMethod(Invocation.getter(#timeout),
      returnValue: _FakeDuration_22()) as Duration);
  @override
  set timeout(Duration? _timeout) =>
      super.noSuchMethod(Invocation.setter(#timeout, _timeout),
          returnValueForMissingStub: null);
  @override
  set trustedCertificates(
          List<_i18.TrustedCertificate>? _trustedCertificates) =>
      super.noSuchMethod(
          Invocation.setter(#trustedCertificates, _trustedCertificates),
          returnValueForMissingStub: null);
  @override
  bool get withCredentials => (super
          .noSuchMethod(Invocation.getter(#withCredentials), returnValue: false)
      as bool);
  @override
  set withCredentials(bool? _withCredentials) =>
      super.noSuchMethod(Invocation.setter(#withCredentials, _withCredentials),
          returnValueForMissingStub: null);
  @override
  List<_i18.GetSocket> get sockets =>
      (super.noSuchMethod(Invocation.getter(#sockets),
          returnValue: <_i18.GetSocket>[]) as List<_i18.GetSocket>);
  @override
  _i18.GetHttpClient get httpClient =>
      (super.noSuchMethod(Invocation.getter(#httpClient),
          returnValue: _FakeGetHttpClient_23()) as _i18.GetHttpClient);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set sockets(List<_i18.GetSocket>? _sockets) =>
      super.noSuchMethod(Invocation.setter(#sockets, _sockets),
          returnValueForMissingStub: null);
  @override
  bool get initialized =>
      (super.noSuchMethod(Invocation.getter(#initialized), returnValue: false)
          as bool);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  _i18.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(Invocation.getter(#onStart),
              returnValue: _FakeInternalFinalCallback_24<void>())
          as _i18.InternalFinalCallback<void>);
  @override
  _i18.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(Invocation.getter(#onDelete),
              returnValue: _FakeInternalFinalCallback_24<void>())
          as _i18.InternalFinalCallback<void>);
  @override
  void onInit() => super.noSuchMethod(Invocation.method(#onInit, []),
      returnValueForMissingStub: null);
  @override
  _i24.Future<List<_i12.Category>> getAllCategories() =>
      (super.noSuchMethod(Invocation.method(#getAllCategories, []),
              returnValue: Future<List<_i12.Category>>.value(<_i12.Category>[]))
          as _i24.Future<List<_i12.Category>>);
  @override
  _i24.Future<_i12.Category> getCategoryById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getCategoryById, [id]),
              returnValue: Future<_i12.Category>.value(_FakeCategory_10()))
          as _i24.Future<_i12.Category>);
  @override
  _i24.Future<_i12.Category> createCategory(_i12.Category? category) =>
      (super.noSuchMethod(Invocation.method(#createCategory, [category]),
              returnValue: Future<_i12.Category>.value(_FakeCategory_10()))
          as _i24.Future<_i12.Category>);
  @override
  _i24.Future<_i12.Category> updateCategory(_i12.Category? category) =>
      (super.noSuchMethod(Invocation.method(#updateCategory, [category]),
              returnValue: Future<_i12.Category>.value(_FakeCategory_10()))
          as _i24.Future<_i12.Category>);
  @override
  _i24.Future<void> deleteCategory(int? id) => (super.noSuchMethod(
      Invocation.method(#deleteCategory, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i24.Future<void>);
  @override
  _i24.Future<_i18.Response<T>> get<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#get, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> post<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> put<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> patch<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> request<T>(String? url, String? method,
          {dynamic body,
          String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#request, [
                url,
                method
              ], {
                #body: body,
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> delete<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i18.GetSocket socket(String? url,
          {Duration? ping = const Duration(seconds: 5)}) =>
      (super.noSuchMethod(Invocation.method(#socket, [url], {#ping: ping}),
          returnValue: _FakeGetSocket_26()) as _i18.GetSocket);
  @override
  _i24.Future<_i18.GraphQLResponse<T>> query<T>(String? query,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#query, [query],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i18.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse_27<T>()))
          as _i24.Future<_i18.GraphQLResponse<T>>);
  @override
  _i24.Future<_i18.GraphQLResponse<T>> mutation<T>(String? mutation,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#mutation, [mutation],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i18.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse_27<T>()))
          as _i24.Future<_i18.GraphQLResponse<T>>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
  @override
  void onReady() => super.noSuchMethod(Invocation.method(#onReady, []),
      returnValueForMissingStub: null);
  @override
  void onClose() => super.noSuchMethod(Invocation.method(#onClose, []),
      returnValueForMissingStub: null);
  @override
  void $configureLifeCycle() =>
      super.noSuchMethod(Invocation.method(#$configureLifeCycle, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [ManagerProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockManagerProvider extends _i1.Mock implements _i3.ManagerProvider {
  MockManagerProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get allowAutoSignedCert =>
      (super.noSuchMethod(Invocation.getter(#allowAutoSignedCert),
          returnValue: false) as bool);
  @override
  set allowAutoSignedCert(bool? _allowAutoSignedCert) => super.noSuchMethod(
      Invocation.setter(#allowAutoSignedCert, _allowAutoSignedCert),
      returnValueForMissingStub: null);
  @override
  String get userAgent =>
      (super.noSuchMethod(Invocation.getter(#userAgent), returnValue: '')
          as String);
  @override
  set userAgent(String? _userAgent) =>
      super.noSuchMethod(Invocation.setter(#userAgent, _userAgent),
          returnValueForMissingStub: null);
  @override
  bool get sendUserAgent =>
      (super.noSuchMethod(Invocation.getter(#sendUserAgent), returnValue: false)
          as bool);
  @override
  set sendUserAgent(bool? _sendUserAgent) =>
      super.noSuchMethod(Invocation.setter(#sendUserAgent, _sendUserAgent),
          returnValueForMissingStub: null);
  @override
  set baseUrl(String? _baseUrl) =>
      super.noSuchMethod(Invocation.setter(#baseUrl, _baseUrl),
          returnValueForMissingStub: null);
  @override
  String get defaultContentType => (super
          .noSuchMethod(Invocation.getter(#defaultContentType), returnValue: '')
      as String);
  @override
  set defaultContentType(String? _defaultContentType) => super.noSuchMethod(
      Invocation.setter(#defaultContentType, _defaultContentType),
      returnValueForMissingStub: null);
  @override
  bool get followRedirects => (super
          .noSuchMethod(Invocation.getter(#followRedirects), returnValue: false)
      as bool);
  @override
  set followRedirects(bool? _followRedirects) =>
      super.noSuchMethod(Invocation.setter(#followRedirects, _followRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxRedirects =>
      (super.noSuchMethod(Invocation.getter(#maxRedirects), returnValue: 0)
          as int);
  @override
  set maxRedirects(int? _maxRedirects) =>
      super.noSuchMethod(Invocation.setter(#maxRedirects, _maxRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxAuthRetries =>
      (super.noSuchMethod(Invocation.getter(#maxAuthRetries), returnValue: 0)
          as int);
  @override
  set maxAuthRetries(int? _maxAuthRetries) =>
      super.noSuchMethod(Invocation.setter(#maxAuthRetries, _maxAuthRetries),
          returnValueForMissingStub: null);
  @override
  set defaultDecoder(_i18.Decoder<dynamic>? _defaultDecoder) =>
      super.noSuchMethod(Invocation.setter(#defaultDecoder, _defaultDecoder),
          returnValueForMissingStub: null);
  @override
  Duration get timeout => (super.noSuchMethod(Invocation.getter(#timeout),
      returnValue: _FakeDuration_22()) as Duration);
  @override
  set timeout(Duration? _timeout) =>
      super.noSuchMethod(Invocation.setter(#timeout, _timeout),
          returnValueForMissingStub: null);
  @override
  set trustedCertificates(
          List<_i18.TrustedCertificate>? _trustedCertificates) =>
      super.noSuchMethod(
          Invocation.setter(#trustedCertificates, _trustedCertificates),
          returnValueForMissingStub: null);
  @override
  bool get withCredentials => (super
          .noSuchMethod(Invocation.getter(#withCredentials), returnValue: false)
      as bool);
  @override
  set withCredentials(bool? _withCredentials) =>
      super.noSuchMethod(Invocation.setter(#withCredentials, _withCredentials),
          returnValueForMissingStub: null);
  @override
  List<_i18.GetSocket> get sockets =>
      (super.noSuchMethod(Invocation.getter(#sockets),
          returnValue: <_i18.GetSocket>[]) as List<_i18.GetSocket>);
  @override
  _i18.GetHttpClient get httpClient =>
      (super.noSuchMethod(Invocation.getter(#httpClient),
          returnValue: _FakeGetHttpClient_23()) as _i18.GetHttpClient);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set sockets(List<_i18.GetSocket>? _sockets) =>
      super.noSuchMethod(Invocation.setter(#sockets, _sockets),
          returnValueForMissingStub: null);
  @override
  bool get initialized =>
      (super.noSuchMethod(Invocation.getter(#initialized), returnValue: false)
          as bool);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  _i18.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(Invocation.getter(#onStart),
              returnValue: _FakeInternalFinalCallback_24<void>())
          as _i18.InternalFinalCallback<void>);
  @override
  _i18.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(Invocation.getter(#onDelete),
              returnValue: _FakeInternalFinalCallback_24<void>())
          as _i18.InternalFinalCallback<void>);
  @override
  void onInit() => super.noSuchMethod(Invocation.method(#onInit, []),
      returnValueForMissingStub: null);
  @override
  _i24.Future<_i6.Manager> getManagerById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getManagerById, [id]),
              returnValue: Future<_i6.Manager>.value(_FakeManager_4()))
          as _i24.Future<_i6.Manager>);
  @override
  _i24.Future<List<_i6.Manager>> searchManagerByName(String? name) =>
      (super.noSuchMethod(Invocation.method(#searchManagerByName, [name]),
              returnValue: Future<List<_i6.Manager>>.value(<_i6.Manager>[]))
          as _i24.Future<List<_i6.Manager>>);
  @override
  _i24.Future<_i6.Manager> getManagerByEmail(String? email) =>
      (super.noSuchMethod(Invocation.method(#getManagerByEmail, [email]),
              returnValue: Future<_i6.Manager>.value(_FakeManager_4()))
          as _i24.Future<_i6.Manager>);
  @override
  _i24.Future<_i18.Response<T>> get<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#get, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> post<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> put<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> patch<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> request<T>(String? url, String? method,
          {dynamic body,
          String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#request, [
                url,
                method
              ], {
                #body: body,
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> delete<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i18.GetSocket socket(String? url,
          {Duration? ping = const Duration(seconds: 5)}) =>
      (super.noSuchMethod(Invocation.method(#socket, [url], {#ping: ping}),
          returnValue: _FakeGetSocket_26()) as _i18.GetSocket);
  @override
  _i24.Future<_i18.GraphQLResponse<T>> query<T>(String? query,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#query, [query],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i18.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse_27<T>()))
          as _i24.Future<_i18.GraphQLResponse<T>>);
  @override
  _i24.Future<_i18.GraphQLResponse<T>> mutation<T>(String? mutation,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#mutation, [mutation],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i18.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse_27<T>()))
          as _i24.Future<_i18.GraphQLResponse<T>>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
  @override
  void onReady() => super.noSuchMethod(Invocation.method(#onReady, []),
      returnValueForMissingStub: null);
  @override
  void onClose() => super.noSuchMethod(Invocation.method(#onClose, []),
      returnValueForMissingStub: null);
  @override
  void $configureLifeCycle() =>
      super.noSuchMethod(Invocation.method(#$configureLifeCycle, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [ManagerStaffSkillProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockManagerStaffSkillProvider extends _i1.Mock
    implements _i9.ManagerStaffSkillProvider {
  MockManagerStaffSkillProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get allowAutoSignedCert =>
      (super.noSuchMethod(Invocation.getter(#allowAutoSignedCert),
          returnValue: false) as bool);
  @override
  set allowAutoSignedCert(bool? _allowAutoSignedCert) => super.noSuchMethod(
      Invocation.setter(#allowAutoSignedCert, _allowAutoSignedCert),
      returnValueForMissingStub: null);
  @override
  String get userAgent =>
      (super.noSuchMethod(Invocation.getter(#userAgent), returnValue: '')
          as String);
  @override
  set userAgent(String? _userAgent) =>
      super.noSuchMethod(Invocation.setter(#userAgent, _userAgent),
          returnValueForMissingStub: null);
  @override
  bool get sendUserAgent =>
      (super.noSuchMethod(Invocation.getter(#sendUserAgent), returnValue: false)
          as bool);
  @override
  set sendUserAgent(bool? _sendUserAgent) =>
      super.noSuchMethod(Invocation.setter(#sendUserAgent, _sendUserAgent),
          returnValueForMissingStub: null);
  @override
  set baseUrl(String? _baseUrl) =>
      super.noSuchMethod(Invocation.setter(#baseUrl, _baseUrl),
          returnValueForMissingStub: null);
  @override
  String get defaultContentType => (super
          .noSuchMethod(Invocation.getter(#defaultContentType), returnValue: '')
      as String);
  @override
  set defaultContentType(String? _defaultContentType) => super.noSuchMethod(
      Invocation.setter(#defaultContentType, _defaultContentType),
      returnValueForMissingStub: null);
  @override
  bool get followRedirects => (super
          .noSuchMethod(Invocation.getter(#followRedirects), returnValue: false)
      as bool);
  @override
  set followRedirects(bool? _followRedirects) =>
      super.noSuchMethod(Invocation.setter(#followRedirects, _followRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxRedirects =>
      (super.noSuchMethod(Invocation.getter(#maxRedirects), returnValue: 0)
          as int);
  @override
  set maxRedirects(int? _maxRedirects) =>
      super.noSuchMethod(Invocation.setter(#maxRedirects, _maxRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxAuthRetries =>
      (super.noSuchMethod(Invocation.getter(#maxAuthRetries), returnValue: 0)
          as int);
  @override
  set maxAuthRetries(int? _maxAuthRetries) =>
      super.noSuchMethod(Invocation.setter(#maxAuthRetries, _maxAuthRetries),
          returnValueForMissingStub: null);
  @override
  set defaultDecoder(_i18.Decoder<dynamic>? _defaultDecoder) =>
      super.noSuchMethod(Invocation.setter(#defaultDecoder, _defaultDecoder),
          returnValueForMissingStub: null);
  @override
  Duration get timeout => (super.noSuchMethod(Invocation.getter(#timeout),
      returnValue: _FakeDuration_22()) as Duration);
  @override
  set timeout(Duration? _timeout) =>
      super.noSuchMethod(Invocation.setter(#timeout, _timeout),
          returnValueForMissingStub: null);
  @override
  set trustedCertificates(
          List<_i18.TrustedCertificate>? _trustedCertificates) =>
      super.noSuchMethod(
          Invocation.setter(#trustedCertificates, _trustedCertificates),
          returnValueForMissingStub: null);
  @override
  bool get withCredentials => (super
          .noSuchMethod(Invocation.getter(#withCredentials), returnValue: false)
      as bool);
  @override
  set withCredentials(bool? _withCredentials) =>
      super.noSuchMethod(Invocation.setter(#withCredentials, _withCredentials),
          returnValueForMissingStub: null);
  @override
  List<_i18.GetSocket> get sockets =>
      (super.noSuchMethod(Invocation.getter(#sockets),
          returnValue: <_i18.GetSocket>[]) as List<_i18.GetSocket>);
  @override
  _i18.GetHttpClient get httpClient =>
      (super.noSuchMethod(Invocation.getter(#httpClient),
          returnValue: _FakeGetHttpClient_23()) as _i18.GetHttpClient);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set sockets(List<_i18.GetSocket>? _sockets) =>
      super.noSuchMethod(Invocation.setter(#sockets, _sockets),
          returnValueForMissingStub: null);
  @override
  bool get initialized =>
      (super.noSuchMethod(Invocation.getter(#initialized), returnValue: false)
          as bool);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  _i18.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(Invocation.getter(#onStart),
              returnValue: _FakeInternalFinalCallback_24<void>())
          as _i18.InternalFinalCallback<void>);
  @override
  _i18.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(Invocation.getter(#onDelete),
              returnValue: _FakeInternalFinalCallback_24<void>())
          as _i18.InternalFinalCallback<void>);
  @override
  void onInit() => super.noSuchMethod(Invocation.method(#onInit, []),
      returnValueForMissingStub: null);
  @override
  _i24.Future<List<_i10.ManagerStaffSkill>> getAll() =>
      (super.noSuchMethod(Invocation.method(#getAll, []),
              returnValue: Future<List<_i10.ManagerStaffSkill>>.value(
                  <_i10.ManagerStaffSkill>[]))
          as _i24.Future<List<_i10.ManagerStaffSkill>>);
  @override
  _i24.Future<_i10.ManagerStaffSkill> getById(int? id) => (super.noSuchMethod(
          Invocation.method(#getById, [id]),
          returnValue:
              Future<_i10.ManagerStaffSkill>.value(_FakeManagerStaffSkill_8()))
      as _i24.Future<_i10.ManagerStaffSkill>);
  @override
  _i24.Future<_i18.Response<T>> get<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#get, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> post<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> put<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> patch<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> request<T>(String? url, String? method,
          {dynamic body,
          String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#request, [
                url,
                method
              ], {
                #body: body,
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> delete<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i18.GetSocket socket(String? url,
          {Duration? ping = const Duration(seconds: 5)}) =>
      (super.noSuchMethod(Invocation.method(#socket, [url], {#ping: ping}),
          returnValue: _FakeGetSocket_26()) as _i18.GetSocket);
  @override
  _i24.Future<_i18.GraphQLResponse<T>> query<T>(String? query,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#query, [query],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i18.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse_27<T>()))
          as _i24.Future<_i18.GraphQLResponse<T>>);
  @override
  _i24.Future<_i18.GraphQLResponse<T>> mutation<T>(String? mutation,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#mutation, [mutation],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i18.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse_27<T>()))
          as _i24.Future<_i18.GraphQLResponse<T>>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
  @override
  void onReady() => super.noSuchMethod(Invocation.method(#onReady, []),
      returnValueForMissingStub: null);
  @override
  void onClose() => super.noSuchMethod(Invocation.method(#onClose, []),
      returnValueForMissingStub: null);
  @override
  void $configureLifeCycle() =>
      super.noSuchMethod(Invocation.method(#$configureLifeCycle, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [SkillProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockSkillProvider extends _i1.Mock implements _i13.SkillProvider {
  MockSkillProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get allowAutoSignedCert =>
      (super.noSuchMethod(Invocation.getter(#allowAutoSignedCert),
          returnValue: false) as bool);
  @override
  set allowAutoSignedCert(bool? _allowAutoSignedCert) => super.noSuchMethod(
      Invocation.setter(#allowAutoSignedCert, _allowAutoSignedCert),
      returnValueForMissingStub: null);
  @override
  String get userAgent =>
      (super.noSuchMethod(Invocation.getter(#userAgent), returnValue: '')
          as String);
  @override
  set userAgent(String? _userAgent) =>
      super.noSuchMethod(Invocation.setter(#userAgent, _userAgent),
          returnValueForMissingStub: null);
  @override
  bool get sendUserAgent =>
      (super.noSuchMethod(Invocation.getter(#sendUserAgent), returnValue: false)
          as bool);
  @override
  set sendUserAgent(bool? _sendUserAgent) =>
      super.noSuchMethod(Invocation.setter(#sendUserAgent, _sendUserAgent),
          returnValueForMissingStub: null);
  @override
  set baseUrl(String? _baseUrl) =>
      super.noSuchMethod(Invocation.setter(#baseUrl, _baseUrl),
          returnValueForMissingStub: null);
  @override
  String get defaultContentType => (super
          .noSuchMethod(Invocation.getter(#defaultContentType), returnValue: '')
      as String);
  @override
  set defaultContentType(String? _defaultContentType) => super.noSuchMethod(
      Invocation.setter(#defaultContentType, _defaultContentType),
      returnValueForMissingStub: null);
  @override
  bool get followRedirects => (super
          .noSuchMethod(Invocation.getter(#followRedirects), returnValue: false)
      as bool);
  @override
  set followRedirects(bool? _followRedirects) =>
      super.noSuchMethod(Invocation.setter(#followRedirects, _followRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxRedirects =>
      (super.noSuchMethod(Invocation.getter(#maxRedirects), returnValue: 0)
          as int);
  @override
  set maxRedirects(int? _maxRedirects) =>
      super.noSuchMethod(Invocation.setter(#maxRedirects, _maxRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxAuthRetries =>
      (super.noSuchMethod(Invocation.getter(#maxAuthRetries), returnValue: 0)
          as int);
  @override
  set maxAuthRetries(int? _maxAuthRetries) =>
      super.noSuchMethod(Invocation.setter(#maxAuthRetries, _maxAuthRetries),
          returnValueForMissingStub: null);
  @override
  set defaultDecoder(_i18.Decoder<dynamic>? _defaultDecoder) =>
      super.noSuchMethod(Invocation.setter(#defaultDecoder, _defaultDecoder),
          returnValueForMissingStub: null);
  @override
  Duration get timeout => (super.noSuchMethod(Invocation.getter(#timeout),
      returnValue: _FakeDuration_22()) as Duration);
  @override
  set timeout(Duration? _timeout) =>
      super.noSuchMethod(Invocation.setter(#timeout, _timeout),
          returnValueForMissingStub: null);
  @override
  set trustedCertificates(
          List<_i18.TrustedCertificate>? _trustedCertificates) =>
      super.noSuchMethod(
          Invocation.setter(#trustedCertificates, _trustedCertificates),
          returnValueForMissingStub: null);
  @override
  bool get withCredentials => (super
          .noSuchMethod(Invocation.getter(#withCredentials), returnValue: false)
      as bool);
  @override
  set withCredentials(bool? _withCredentials) =>
      super.noSuchMethod(Invocation.setter(#withCredentials, _withCredentials),
          returnValueForMissingStub: null);
  @override
  List<_i18.GetSocket> get sockets =>
      (super.noSuchMethod(Invocation.getter(#sockets),
          returnValue: <_i18.GetSocket>[]) as List<_i18.GetSocket>);
  @override
  _i18.GetHttpClient get httpClient =>
      (super.noSuchMethod(Invocation.getter(#httpClient),
          returnValue: _FakeGetHttpClient_23()) as _i18.GetHttpClient);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set sockets(List<_i18.GetSocket>? _sockets) =>
      super.noSuchMethod(Invocation.setter(#sockets, _sockets),
          returnValueForMissingStub: null);
  @override
  bool get initialized =>
      (super.noSuchMethod(Invocation.getter(#initialized), returnValue: false)
          as bool);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  _i18.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(Invocation.getter(#onStart),
              returnValue: _FakeInternalFinalCallback_24<void>())
          as _i18.InternalFinalCallback<void>);
  @override
  _i18.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(Invocation.getter(#onDelete),
              returnValue: _FakeInternalFinalCallback_24<void>())
          as _i18.InternalFinalCallback<void>);
  @override
  void onInit() => super.noSuchMethod(Invocation.method(#onInit, []),
      returnValueForMissingStub: null);
  @override
  _i24.Future<List<_i14.Skill>> getAll() =>
      (super.noSuchMethod(Invocation.method(#getAll, []),
              returnValue: Future<List<_i14.Skill>>.value(<_i14.Skill>[]))
          as _i24.Future<List<_i14.Skill>>);
  @override
  _i24.Future<_i14.Skill> getById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getById, [id]),
              returnValue: Future<_i14.Skill>.value(_FakeSkill_12()))
          as _i24.Future<_i14.Skill>);
  @override
  _i24.Future<List<_i14.Skill>> searchByName(String? name) =>
      (super.noSuchMethod(Invocation.method(#searchByName, [name]),
              returnValue: Future<List<_i14.Skill>>.value(<_i14.Skill>[]))
          as _i24.Future<List<_i14.Skill>>);
  @override
  _i24.Future<_i14.Skill> create(_i14.Skill? skill) =>
      (super.noSuchMethod(Invocation.method(#create, [skill]),
              returnValue: Future<_i14.Skill>.value(_FakeSkill_12()))
          as _i24.Future<_i14.Skill>);
  @override
  _i24.Future<_i14.Skill> update(_i14.Skill? skill) =>
      (super.noSuchMethod(Invocation.method(#update, [skill]),
              returnValue: Future<_i14.Skill>.value(_FakeSkill_12()))
          as _i24.Future<_i14.Skill>);
  @override
  _i24.Future<void> deleteSkill(int? id) => (super.noSuchMethod(
      Invocation.method(#deleteSkill, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i24.Future<void>);
  @override
  _i24.Future<_i18.Response<T>> get<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#get, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> post<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> put<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> patch<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> request<T>(String? url, String? method,
          {dynamic body,
          String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#request, [
                url,
                method
              ], {
                #body: body,
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> delete<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i18.GetSocket socket(String? url,
          {Duration? ping = const Duration(seconds: 5)}) =>
      (super.noSuchMethod(Invocation.method(#socket, [url], {#ping: ping}),
          returnValue: _FakeGetSocket_26()) as _i18.GetSocket);
  @override
  _i24.Future<_i18.GraphQLResponse<T>> query<T>(String? query,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#query, [query],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i18.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse_27<T>()))
          as _i24.Future<_i18.GraphQLResponse<T>>);
  @override
  _i24.Future<_i18.GraphQLResponse<T>> mutation<T>(String? mutation,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#mutation, [mutation],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i18.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse_27<T>()))
          as _i24.Future<_i18.GraphQLResponse<T>>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
  @override
  void onReady() => super.noSuchMethod(Invocation.method(#onReady, []),
      returnValueForMissingStub: null);
  @override
  void onClose() => super.noSuchMethod(Invocation.method(#onClose, []),
      returnValueForMissingStub: null);
  @override
  void $configureLifeCycle() =>
      super.noSuchMethod(Invocation.method(#$configureLifeCycle, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [StaffProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockStaffProvider extends _i1.Mock implements _i2.StaffProvider {
  MockStaffProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get allowAutoSignedCert =>
      (super.noSuchMethod(Invocation.getter(#allowAutoSignedCert),
          returnValue: false) as bool);
  @override
  set allowAutoSignedCert(bool? _allowAutoSignedCert) => super.noSuchMethod(
      Invocation.setter(#allowAutoSignedCert, _allowAutoSignedCert),
      returnValueForMissingStub: null);
  @override
  String get userAgent =>
      (super.noSuchMethod(Invocation.getter(#userAgent), returnValue: '')
          as String);
  @override
  set userAgent(String? _userAgent) =>
      super.noSuchMethod(Invocation.setter(#userAgent, _userAgent),
          returnValueForMissingStub: null);
  @override
  bool get sendUserAgent =>
      (super.noSuchMethod(Invocation.getter(#sendUserAgent), returnValue: false)
          as bool);
  @override
  set sendUserAgent(bool? _sendUserAgent) =>
      super.noSuchMethod(Invocation.setter(#sendUserAgent, _sendUserAgent),
          returnValueForMissingStub: null);
  @override
  set baseUrl(String? _baseUrl) =>
      super.noSuchMethod(Invocation.setter(#baseUrl, _baseUrl),
          returnValueForMissingStub: null);
  @override
  String get defaultContentType => (super
          .noSuchMethod(Invocation.getter(#defaultContentType), returnValue: '')
      as String);
  @override
  set defaultContentType(String? _defaultContentType) => super.noSuchMethod(
      Invocation.setter(#defaultContentType, _defaultContentType),
      returnValueForMissingStub: null);
  @override
  bool get followRedirects => (super
          .noSuchMethod(Invocation.getter(#followRedirects), returnValue: false)
      as bool);
  @override
  set followRedirects(bool? _followRedirects) =>
      super.noSuchMethod(Invocation.setter(#followRedirects, _followRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxRedirects =>
      (super.noSuchMethod(Invocation.getter(#maxRedirects), returnValue: 0)
          as int);
  @override
  set maxRedirects(int? _maxRedirects) =>
      super.noSuchMethod(Invocation.setter(#maxRedirects, _maxRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxAuthRetries =>
      (super.noSuchMethod(Invocation.getter(#maxAuthRetries), returnValue: 0)
          as int);
  @override
  set maxAuthRetries(int? _maxAuthRetries) =>
      super.noSuchMethod(Invocation.setter(#maxAuthRetries, _maxAuthRetries),
          returnValueForMissingStub: null);
  @override
  set defaultDecoder(_i18.Decoder<dynamic>? _defaultDecoder) =>
      super.noSuchMethod(Invocation.setter(#defaultDecoder, _defaultDecoder),
          returnValueForMissingStub: null);
  @override
  Duration get timeout => (super.noSuchMethod(Invocation.getter(#timeout),
      returnValue: _FakeDuration_22()) as Duration);
  @override
  set timeout(Duration? _timeout) =>
      super.noSuchMethod(Invocation.setter(#timeout, _timeout),
          returnValueForMissingStub: null);
  @override
  set trustedCertificates(
          List<_i18.TrustedCertificate>? _trustedCertificates) =>
      super.noSuchMethod(
          Invocation.setter(#trustedCertificates, _trustedCertificates),
          returnValueForMissingStub: null);
  @override
  bool get withCredentials => (super
          .noSuchMethod(Invocation.getter(#withCredentials), returnValue: false)
      as bool);
  @override
  set withCredentials(bool? _withCredentials) =>
      super.noSuchMethod(Invocation.setter(#withCredentials, _withCredentials),
          returnValueForMissingStub: null);
  @override
  List<_i18.GetSocket> get sockets =>
      (super.noSuchMethod(Invocation.getter(#sockets),
          returnValue: <_i18.GetSocket>[]) as List<_i18.GetSocket>);
  @override
  _i18.GetHttpClient get httpClient =>
      (super.noSuchMethod(Invocation.getter(#httpClient),
          returnValue: _FakeGetHttpClient_23()) as _i18.GetHttpClient);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set sockets(List<_i18.GetSocket>? _sockets) =>
      super.noSuchMethod(Invocation.setter(#sockets, _sockets),
          returnValueForMissingStub: null);
  @override
  bool get initialized =>
      (super.noSuchMethod(Invocation.getter(#initialized), returnValue: false)
          as bool);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  _i18.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(Invocation.getter(#onStart),
              returnValue: _FakeInternalFinalCallback_24<void>())
          as _i18.InternalFinalCallback<void>);
  @override
  _i18.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(Invocation.getter(#onDelete),
              returnValue: _FakeInternalFinalCallback_24<void>())
          as _i18.InternalFinalCallback<void>);
  @override
  void onInit() => super.noSuchMethod(Invocation.method(#onInit, []),
      returnValueForMissingStub: null);
  @override
  _i24.Future<_i5.Staff> getStaffById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getStaffById, [id]),
              returnValue: Future<_i5.Staff>.value(_FakeStaff_3()))
          as _i24.Future<_i5.Staff>);
  @override
  _i24.Future<List<_i5.Staff>> searchStaffByName(String? name) =>
      (super.noSuchMethod(Invocation.method(#searchStaffByName, [name]),
              returnValue: Future<List<_i5.Staff>>.value(<_i5.Staff>[]))
          as _i24.Future<List<_i5.Staff>>);
  @override
  _i24.Future<_i5.Staff> updateDetails(_i5.Staff? staff) =>
      (super.noSuchMethod(Invocation.method(#updateDetails, [staff]),
              returnValue: Future<_i5.Staff>.value(_FakeStaff_3()))
          as _i24.Future<_i5.Staff>);
  @override
  _i24.Future<_i5.Staff> getStaffByEmail(String? email) =>
      (super.noSuchMethod(Invocation.method(#getStaffByEmail, [email]),
              returnValue: Future<_i5.Staff>.value(_FakeStaff_3()))
          as _i24.Future<_i5.Staff>);
  @override
  _i24.Future<_i18.Response<T>> get<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#get, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> post<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> put<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> patch<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> request<T>(String? url, String? method,
          {dynamic body,
          String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#request, [
                url,
                method
              ], {
                #body: body,
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> delete<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i18.GetSocket socket(String? url,
          {Duration? ping = const Duration(seconds: 5)}) =>
      (super.noSuchMethod(Invocation.method(#socket, [url], {#ping: ping}),
          returnValue: _FakeGetSocket_26()) as _i18.GetSocket);
  @override
  _i24.Future<_i18.GraphQLResponse<T>> query<T>(String? query,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#query, [query],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i18.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse_27<T>()))
          as _i24.Future<_i18.GraphQLResponse<T>>);
  @override
  _i24.Future<_i18.GraphQLResponse<T>> mutation<T>(String? mutation,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#mutation, [mutation],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i18.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse_27<T>()))
          as _i24.Future<_i18.GraphQLResponse<T>>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
  @override
  void onReady() => super.noSuchMethod(Invocation.method(#onReady, []),
      returnValueForMissingStub: null);
  @override
  void onClose() => super.noSuchMethod(Invocation.method(#onClose, []),
      returnValueForMissingStub: null);
  @override
  void $configureLifeCycle() =>
      super.noSuchMethod(Invocation.method(#$configureLifeCycle, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [StaffSkillProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockStaffSkillProvider extends _i1.Mock
    implements _i7.StaffSkillProvider {
  MockStaffSkillProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get allowAutoSignedCert =>
      (super.noSuchMethod(Invocation.getter(#allowAutoSignedCert),
          returnValue: false) as bool);
  @override
  set allowAutoSignedCert(bool? _allowAutoSignedCert) => super.noSuchMethod(
      Invocation.setter(#allowAutoSignedCert, _allowAutoSignedCert),
      returnValueForMissingStub: null);
  @override
  String get userAgent =>
      (super.noSuchMethod(Invocation.getter(#userAgent), returnValue: '')
          as String);
  @override
  set userAgent(String? _userAgent) =>
      super.noSuchMethod(Invocation.setter(#userAgent, _userAgent),
          returnValueForMissingStub: null);
  @override
  bool get sendUserAgent =>
      (super.noSuchMethod(Invocation.getter(#sendUserAgent), returnValue: false)
          as bool);
  @override
  set sendUserAgent(bool? _sendUserAgent) =>
      super.noSuchMethod(Invocation.setter(#sendUserAgent, _sendUserAgent),
          returnValueForMissingStub: null);
  @override
  set baseUrl(String? _baseUrl) =>
      super.noSuchMethod(Invocation.setter(#baseUrl, _baseUrl),
          returnValueForMissingStub: null);
  @override
  String get defaultContentType => (super
          .noSuchMethod(Invocation.getter(#defaultContentType), returnValue: '')
      as String);
  @override
  set defaultContentType(String? _defaultContentType) => super.noSuchMethod(
      Invocation.setter(#defaultContentType, _defaultContentType),
      returnValueForMissingStub: null);
  @override
  bool get followRedirects => (super
          .noSuchMethod(Invocation.getter(#followRedirects), returnValue: false)
      as bool);
  @override
  set followRedirects(bool? _followRedirects) =>
      super.noSuchMethod(Invocation.setter(#followRedirects, _followRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxRedirects =>
      (super.noSuchMethod(Invocation.getter(#maxRedirects), returnValue: 0)
          as int);
  @override
  set maxRedirects(int? _maxRedirects) =>
      super.noSuchMethod(Invocation.setter(#maxRedirects, _maxRedirects),
          returnValueForMissingStub: null);
  @override
  int get maxAuthRetries =>
      (super.noSuchMethod(Invocation.getter(#maxAuthRetries), returnValue: 0)
          as int);
  @override
  set maxAuthRetries(int? _maxAuthRetries) =>
      super.noSuchMethod(Invocation.setter(#maxAuthRetries, _maxAuthRetries),
          returnValueForMissingStub: null);
  @override
  set defaultDecoder(_i18.Decoder<dynamic>? _defaultDecoder) =>
      super.noSuchMethod(Invocation.setter(#defaultDecoder, _defaultDecoder),
          returnValueForMissingStub: null);
  @override
  Duration get timeout => (super.noSuchMethod(Invocation.getter(#timeout),
      returnValue: _FakeDuration_22()) as Duration);
  @override
  set timeout(Duration? _timeout) =>
      super.noSuchMethod(Invocation.setter(#timeout, _timeout),
          returnValueForMissingStub: null);
  @override
  set trustedCertificates(
          List<_i18.TrustedCertificate>? _trustedCertificates) =>
      super.noSuchMethod(
          Invocation.setter(#trustedCertificates, _trustedCertificates),
          returnValueForMissingStub: null);
  @override
  bool get withCredentials => (super
          .noSuchMethod(Invocation.getter(#withCredentials), returnValue: false)
      as bool);
  @override
  set withCredentials(bool? _withCredentials) =>
      super.noSuchMethod(Invocation.setter(#withCredentials, _withCredentials),
          returnValueForMissingStub: null);
  @override
  List<_i18.GetSocket> get sockets =>
      (super.noSuchMethod(Invocation.getter(#sockets),
          returnValue: <_i18.GetSocket>[]) as List<_i18.GetSocket>);
  @override
  _i18.GetHttpClient get httpClient =>
      (super.noSuchMethod(Invocation.getter(#httpClient),
          returnValue: _FakeGetHttpClient_23()) as _i18.GetHttpClient);
  @override
  bool get isDisposed =>
      (super.noSuchMethod(Invocation.getter(#isDisposed), returnValue: false)
          as bool);
  @override
  set sockets(List<_i18.GetSocket>? _sockets) =>
      super.noSuchMethod(Invocation.setter(#sockets, _sockets),
          returnValueForMissingStub: null);
  @override
  bool get initialized =>
      (super.noSuchMethod(Invocation.getter(#initialized), returnValue: false)
          as bool);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  _i18.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(Invocation.getter(#onStart),
              returnValue: _FakeInternalFinalCallback_24<void>())
          as _i18.InternalFinalCallback<void>);
  @override
  _i18.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(Invocation.getter(#onDelete),
              returnValue: _FakeInternalFinalCallback_24<void>())
          as _i18.InternalFinalCallback<void>);
  @override
  void onInit() => super.noSuchMethod(Invocation.method(#onInit, []),
      returnValueForMissingStub: null);
  @override
  _i24.Future<List<_i8.StaffSkill>> getAll() => (super.noSuchMethod(
          Invocation.method(#getAll, []),
          returnValue: Future<List<_i8.StaffSkill>>.value(<_i8.StaffSkill>[]))
      as _i24.Future<List<_i8.StaffSkill>>);
  @override
  _i24.Future<_i8.StaffSkill> getById(int? id, int? sid) =>
      (super.noSuchMethod(Invocation.method(#getById, [id, sid]),
              returnValue: Future<_i8.StaffSkill>.value(_FakeStaffSkill_6()))
          as _i24.Future<_i8.StaffSkill>);
  @override
  _i24.Future<List<_i8.StaffSkill>> getAllForUser(int? id) =>
      (super.noSuchMethod(Invocation.method(#getAllForUser, [id]),
              returnValue:
                  Future<List<_i8.StaffSkill>>.value(<_i8.StaffSkill>[]))
          as _i24.Future<List<_i8.StaffSkill>>);
  @override
  _i24.Future<_i8.StaffSkill> update(_i8.StaffSkill? skill, int? sid) =>
      (super.noSuchMethod(Invocation.method(#update, [skill, sid]),
              returnValue: Future<_i8.StaffSkill>.value(_FakeStaffSkill_6()))
          as _i24.Future<_i8.StaffSkill>);
  @override
  _i24.Future<_i8.StaffSkill> create(_i8.StaffSkill? skill, int? sid) =>
      (super.noSuchMethod(Invocation.method(#create, [skill, sid]),
              returnValue: Future<_i8.StaffSkill>.value(_FakeStaffSkill_6()))
          as _i24.Future<_i8.StaffSkill>);
  @override
  _i24.Future<_i18.Response<T>> get<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#get, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> post<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> put<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> patch<T>(String? url, dynamic body,
          {String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [
                url,
                body
              ], {
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> request<T>(String? url, String? method,
          {dynamic body,
          String? contentType,
          Map<String, String>? headers,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder,
          _i18.Progress? uploadProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#request, [
                url,
                method
              ], {
                #body: body,
                #contentType: contentType,
                #headers: headers,
                #query: query,
                #decoder: decoder,
                #uploadProgress: uploadProgress
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i24.Future<_i18.Response<T>> delete<T>(String? url,
          {Map<String, String>? headers,
          String? contentType,
          Map<String, dynamic>? query,
          _i18.Decoder<T>? decoder}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [
                url
              ], {
                #headers: headers,
                #contentType: contentType,
                #query: query,
                #decoder: decoder
              }),
              returnValue:
                  Future<_i18.Response<T>>.value(_FakeResponse_25<T>()))
          as _i24.Future<_i18.Response<T>>);
  @override
  _i18.GetSocket socket(String? url,
          {Duration? ping = const Duration(seconds: 5)}) =>
      (super.noSuchMethod(Invocation.method(#socket, [url], {#ping: ping}),
          returnValue: _FakeGetSocket_26()) as _i18.GetSocket);
  @override
  _i24.Future<_i18.GraphQLResponse<T>> query<T>(String? query,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#query, [query],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i18.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse_27<T>()))
          as _i24.Future<_i18.GraphQLResponse<T>>);
  @override
  _i24.Future<_i18.GraphQLResponse<T>> mutation<T>(String? mutation,
          {String? url,
          Map<String, dynamic>? variables,
          Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#mutation, [mutation],
                  {#url: url, #variables: variables, #headers: headers}),
              returnValue: Future<_i18.GraphQLResponse<T>>.value(
                  _FakeGraphQLResponse_27<T>()))
          as _i24.Future<_i18.GraphQLResponse<T>>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
  @override
  void onReady() => super.noSuchMethod(Invocation.method(#onReady, []),
      returnValueForMissingStub: null);
  @override
  void onClose() => super.noSuchMethod(Invocation.method(#onClose, []),
      returnValueForMissingStub: null);
  @override
  void $configureLifeCycle() =>
      super.noSuchMethod(Invocation.method(#$configureLifeCycle, []),
          returnValueForMissingStub: null);
}
